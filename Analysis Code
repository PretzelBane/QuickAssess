# Department QuickAssess
# February 2024


## load and install packages as necessary
#LST_packages <- c("readxl", "openxlsx", "tidyverse", "ggplot2", "ggmosaic", "qcc", "dplyr", "data.table")
LST_packages <- c("readxl", "openxlsx", "tidyverse", "ggplot2", "dplyr")
installed_packages <- LST_packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
  install.packages(LST_packages[!installed_packages])
}
invisible(lapply(LST_packages, library, character.only = TRUE))


## SET USER-DEFINED VARIABLES
### Set parameters to specify filename
#### Set and Range differentiate the input/output run; filenames will be appended with them
VAR_set = "FD"
VAR_range = "2019-2023"
#### Main director is where the input file is located and the output folder will be created
VAR_mainDir = "C:/Users/rapelak/R Projects/QuickAsses"
#### Do not include Set and Range or file extension on the filename variables - they will be added automatically
#### Note that the actual input file must be the below variable plus the Set and Range, seperated by spaces
VAR_inputFilename = "QuickAssess Input"
VAR_outputFilename = "QuickAssess Output"
### Set this to TRUE if you want to save output to folder
#### Leave it as false to run without saving results
FLAG_save = TRUE


## Input / Output Prep
#### Set path variables
VAR_inputFullFilename = paste0(VAR_inputFilename, " ", VAR_set, " ", VAR_range, ".xlsx", sep="")
VAR_outputFullFilename = paste0(VAR_outputFilename, " ", VAR_set, " ", VAR_range, ".xlsx", sep="")
VAR_inputPath = paste0(VAR_mainDir, "/", VAR_inputFullFilename, sep="")
VAR_outputDir = paste0(VAR_mainDir, "/Output ",VAR_set, " ",VAR_range, sep="")
VAR_outputPath = paste0(VAR_outputDir, "/", VAR_outputFullFilename, sep="")
### Import Data from the Excel file containing the Business Objects output
#### dept, range, and sheets are from the standardized filename and sheet format of the Excel file that contains the BO output of QuickAccess report
#### Set string to contain sheet names to loop through
LST_sheets <- c("Equip", "Doc", "Item", "WOPM", "WOCOR", "ActivityPM", "ActivityCOR", "CommentPM", "CommentCOR")
#### Import Each Sheet
##### Loop through sheets and import one dataframe for each, named after the sheet
for (i_sheet in LST_sheets) {
  DF_Import <- read_excel(VAR_inputPath, sheet = i_sheet)
  assign(paste("DF_",i_sheet,sep=''),data.frame(DF_Import))
  rm(DF_Import)
}
rm(i_sheet)
### Output Directory creation
#### Create a directory for the output plots
if (FLAG_save) {
  if (!dir.exists(VAR_outputDir)){
    dir.create(VAR_outputDir)
  }
}


## Cleanup
#### Stitch COR & PM versions of WO, Activity, Comment together
DF_WO <- rbind(DF_WOPM, DF_WOCOR)
DF_Activity <- rbind(DF_ActivityPM, DF_ActivityCOR)
DF_Comment <- rbind(DF_CommentPM, DF_CommentCOR)
rm(DF_WOPM, DF_WOCOR, DF_ActivityPM, DF_ActivityCOR, DF_CommentPM, DF_CommentCOR)
#### Treat Type PMGMP same as PM
DF_WO$WO.Type[DF_WO$WO.Type=="PMGMP"] <- "PM"
#### Replace NA with 'Blank' where needed
DF_Equip$Reliability.Ranking[is.na(DF_Equip$Reliability.Ranking)] <- "BLANK"
DF_WO$Impact[is.na(DF_WO$Impact)] <- "BLANK"
DF_WO$WO.Sub.type[is.na(DF_WO$WO.Sub.type)] <- "BLANK"
DF_WO$Task[is.na(DF_WO$Task)] <- "BLANK"  
DF_WO$Hours.Worked[is.na(DF_WO$Hours.Worked)] <- 0  
#### If Reported date is blank, fill it with created date
DF_WO$Reported.Date[is.na(DF_WO$Reported.Date)] <- DF_WO$Created.Date.Time
#### Adjust date format
DF_Equip$Commission.Date <- as.Date(DF_Equip$Commission.Date, tz=Sys.timezone())
DF_WO$Complete.Date <- as.Date(DF_WO$Complete.Date, tz=Sys.timezone())
DF_WO$WO.Due.Date <- as.Date(DF_WO$WO.Due.Date, tz=Sys.timezone())
DF_WO$Reported.Date <- as.Date(DF_WO$Reported.Date, tz=Sys.timezone())
DF_WO$Created.Date.Time <- as.Date(DF_WO$Created.Date.Time, tz=Sys.timezone())
### Add a concatenated class-category column to equipment
DF_Equip$ClassCategory <- paste(DF_Equip$Class,"-",DF_Equip$Category,sep="")
#### Merge equipment data onto work order DF, matching by EAMS ID
DF_WO <- merge(DF_WO, DF_Equip, by.x="Object.Code", by.y="Object", all.x=T)
DF_WO <- DF_WO[!(colnames(DF_WO) %in% c("Obj..Leg..ID...2","Obj..Leg..ID..4","Parent","P.ID.No"))]
#### Rename some ugly column names
colnames(DF_Equip)[colnames(DF_Equip)=="Description"] <- "Description.Equip"
colnames(DF_Equip)[colnames(DF_Equip)=="Obj..Leg..ID...2"] <- "var2"
colnames(DF_Equip)[colnames(DF_Equip)=="Obj..Leg..ID..4"] <- "var4"
colnames(DF_Equip)[colnames(DF_Equip)=="P.ID.No"] <- "PID"
colnames(DF_WO)[colnames(DF_WO)=="Description.x"] <- "Description.equip"
colnames(DF_WO)[colnames(DF_WO)=="Description.y"] <- "Description.wo"
colnames(DF_WO)[colnames(DF_WO)=="WO.Due.Date"] <- "Original.Due.Date"
colnames(DF_WO)[colnames(DF_WO)=="Created.Date.Time"] <- "Created.Date"


## Data Compliance
### Calculate variables
#### Total Equipment Count variable
VAR_equipCount <- nrow(DF_Equip)
#### Calc percentages of completeness
VAR_popClassCat <- (VAR_equipCount - sum(is.na(DF_Equip$Class) | is.na(DF_Equip$Category))) / VAR_equipCount
VAR_popRank <- (sum(!is.na(DF_Equip$Reliability.Ranking))) / VAR_equipCount
VAR_popManufMod <- (VAR_equipCount - sum(is.na(DF_Equip$Manufacturer) | is.na(DF_Equip$Model))) / VAR_equipCount
VAR_popDrawing <- (sum(!is.na(DF_Equip$P.ID.No))) / VAR_equipCount
VAR_popDoc <- (VAR_equipCount - length(setdiff(DF_Equip$Object, DF_Doc$Object))) / VAR_equipCount
VAR_popItem <- (VAR_equipCount - length(setdiff(DF_Equip$Object, DF_Item$Object))) / VAR_equipCount
#### Non-Blank Impact on COR WO
VAR_popImpact <- (sum(DF_WO$WO.Type=="COR") - sum(DF_WO$WO.Type=="COR" & is.na(DF_WO$Impact))) / sum(DF_WO$WO.Type=="COR")
#### Non-blank / non-zero Downtime Hours on WO with Impact of SHUTDOWN or REDUCTN
VAR_popDowntime <- sum((DF_WO$Impact=="SHUTDOWN" | DF_WO$Impact=="REDUCTN") & (!is.na(DF_WO$DowntimeHours) & DF_WO$DowntimeHours!=0)) / sum(DF_WO$Impact=="SHUTDOWN" | DF_WO$Impact=="REDUCTN")
#### FAIL WOs (COR or MOD with IMPACT != NOFAIL) with Failure, Cause, & Action all filled in
VAR_FAILCount <- sum ((DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & DF_WO$Impact != "NOFAIL")
VAR_popFailcodes <- sum ((DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & DF_WO$Impact != "NOFAIL" & (!is.na(DF_WO$Failure.Mode))) / VAR_FAILCount 
#### Task Use
VAR_CORTask <- sum((DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & !DF_WO$Task=="BLANK") / sum(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD")
VAR_PMTask <- sum((DF_WO$WO.Type=="PM" | DF_WO$WO.Type=="CAL") & !DF_WO$Task=="BLANK") / sum(DF_WO$WO.Type=="PM" | DF_WO$WO.Type=="CAL")
### Collect equipment metrics into dataframe
LST_Names <- c("Class/Cat", "Manuf/Model", "RRank", "Drawing", "Documents", "Parts")
LST_Metrics <- c(VAR_popClassCat, VAR_popManufMod, VAR_popRank, VAR_popDrawing, VAR_popDoc, VAR_popItem)
LST_Order <- 1:6
DF_Equip.Compliance <- data.frame(LST_Names, LST_Metrics, LST_Order)
### Collect work order metrics into dataframe
LST_Names <- c("PM Task", "COR Task", "Impact", "Downtime", "Fail Codes")
LST_Metrics <- c(VAR_PMTask, VAR_CORTask, VAR_popImpact, VAR_popDowntime, VAR_popFailcodes)
LST_Order <- 1:5
DF_WO.Compliance <- data.frame(LST_Names, LST_Metrics, LST_Order)
rm(LST_Names, LST_Metrics, LST_Order)
### Chart equipment metrics
PLOT_EQComp <- ggplot(data=DF_Equip.Compliance, aes(x=reorder(LST_Names,-LST_Order), y=LST_Metrics)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  coord_flip() +
  scale_fill_manual(name="Year Range", values=c('darkblue', 'chartreuse4')) +
  scale_y_continuous(limits = c(0, 1), expand = c(0,0)) +
  geom_text(aes(label=scales::percent(LST_Metrics, accuracy = 1)), hjust=1.5, color='white') +
  labs(title="Equipment Compliance") +
  xlab("Metric") +
  ylab("Percent Compliant") +
  guides(fill = guide_legend(reverse=T)) +
  theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_EQComp
### Chart work order metrics
PLOT_WOComp <- ggplot(data=DF_WO.Compliance, aes(x=reorder(LST_Names,-LST_Order), y=LST_Metrics)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  coord_flip() +
  scale_fill_manual(name="Year Range", values=c('darkblue', 'chartreuse4')) +
  scale_y_continuous(limits = c(0, 1), expand = c(0,0)) +
  geom_text(aes(label=scales::percent(LST_Metrics, accuracy = 1)), hjust=1.5, color='white') +
  labs(title="Work Order Compliance") +
  xlab("Metric") +
  ylab("Percent Compliant") +
  guides(fill = guide_legend(reverse=T)) +
  theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_WOComp

## Equipment - Classification

### Chart EAMS ID counts by ClassCat
#### Make a new DF with Class-Category as the anchor
DF_ClassCat <- unique(DF_Equip[c("Class","Category")])
DF_ClassCat$ClassCategory <- paste(DF_ClassCat$Class,"-",DF_ClassCat$Category,sep="")
#### Populate with count of EAMS IDs per Class-Category
##### Collect the counts in a temp dataframe
DF_temp <- DF_Equip %>%
  count(Class, Category) %>%
  right_join(DF_ClassCat) %>%
  replace_na(list(n=0))
##### transfer the counts to the ClassCat DF
DF_ClassCat$Count <- DF_temp$n[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
rm(DF_temp)
#### Plot EAMS ID Counts
##### create a temporary plotting DF in the desired order
DF_Plot = DF_ClassCat[order(DF_ClassCat$Count, decreasing=TRUE),]
##### plot
PLOT_IDCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-Count), y=Count)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Count of EAMS ID by Class-Category") +
  xlab("Class-Category") +
  ylab("Count") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_IDCount


## Equipment - Reliability Rank

### Chart EAMS ID count by Reliability Rank
#### Make a new DF with Reliability Rank as the anchor and an order for charting
LST_ranks <- c("PLATINUM", "GOLD", "SILVER", "BRONZE", "LEAD", "BLANK")
LST_rankValues <- 5:0
DF_ReliRank <- data.frame(Reliability.Ranking = LST_ranks, Value=LST_rankValues)
#### Populate with count of EAMS IDs per ReliRank
for (iRank in LST_ranks) {
  DF_ReliRank$Count[DF_ReliRank$Reliability.Ranking == iRank] <- nrow(DF_Equip[DF_Equip$Reliability.Ranking==iRank,])
}
#### Plot EAMS ID Counts
PLOT_RRCount <- ggplot(data=DF_ReliRank, aes(x=reorder(Reliability.Ranking, -Value), y=Count)) +
  geom_bar(stat="identity", fill=ifelse(DF_ReliRank$Reliability.Ranking=="BLANK","firebrick4","chartreuse4")) +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Count of EAMS ID by Reliability Rank") +
  xlab("Reliability Rank") +
  ylab("Count") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_RRCount

### Chart average reliability rank by class-category
#### Add a RRankScore column to the Equipment DF
DF_Equip$RRankScore <- LST_rankValues[match(DF_Equip$Reliability.Ranking, LST_ranks)]
#### Put the average RRank for each classcat on the classCategory DF
DF_temp <- DF_Equip %>%
  group_by(ClassCategory) %>%
  summarise(avg = mean(RRankScore))
DF_ClassCat$AvgRRank <- DF_temp$avg[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
#### plot the average RRank by class-category
##### create a temporary plotting DF in the desired order
DF_Plot = DF_ClassCat[order(DF_ClassCat$AvgRRank, decreasing=TRUE),]
##### plot
PLOT_RRankAvg <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-AvgRRank), y=AvgRRank)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Reliability Rank by Class-Category") +
  xlab("Class-Category") +
  ylab("Average") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_RRankAvg


## Equipment - Age

### Chart average equipment age by class-category
#### Add an age column to the Equipment DF (in years)
DF_Equip$Age <- as.numeric((Sys.Date() - DF_Equip$Commission.Date)/365.25)
#### Put the average age for each classcat on the classCategory DF
DF_temp <- DF_Equip %>%
  group_by(ClassCategory) %>%
  summarise(avg = mean(Age))
DF_ClassCat$AvgAge <- DF_temp$avg[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
#### plot the average age by class-category
##### create a temporary plotting DF in the desired order
DF_Plot = DF_ClassCat[order(DF_ClassCat$AvgAge, decreasing=TRUE),]
##### plot
PLOT_AgeAvg <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-AvgAge), y=AvgAge)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Age by Class-Category") +
  xlab("Class-Category") +
  ylab("Average") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_AgeAvg


## Work Order Preparation

### Create a DF by Year 
#### Add a Year column to the work order DF
DF_WO$Complete.Year <- as.numeric(format(DF_WO$Complete.Date, '%Y'))
#### Make a DF of years in the WO data
LST_Years <- unique(sort(DF_WO$Complete.Year))
DF_Year <- data.frame(LST_Years)
colnames(DF_Year)[1] <- "Year"
### Put the counts of various WO interests in the year DF for potential trending
#### All WOs 
DF_temp <- DF_WO %>%
  group_by(Complete.Year) %>%
  summarise(n = n(), hrs=sum(Hours.Worked), cost=sum(Total.Cost))
DF_Year$WO.Count <- DF_temp$n[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$WO.Hours <- DF_temp$hrs[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$WO.Cost <- DF_temp$cost[match(DF_Year$Year, DF_temp$Complete.Year)]
rm(DF_temp)
#### COR WOs
DF_temp <- DF_WO[DF_WO$WO.Type=="COR",] %>%
  group_by(Complete.Year) %>%
  summarise(n = n(), hrs=sum(Hours.Worked), cost=sum(Total.Cost))
DF_Year$COR.Count <- DF_temp$n[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$COR.Hours <- DF_temp$hrs[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$COR.Cost <- DF_temp$cost[match(DF_Year$Year, DF_temp$Complete.Year)]
#### PM WOs
DF_temp <- DF_WO[DF_WO$WO.Type=="PM",] %>%
  group_by(Complete.Year) %>%
  summarise(n = n(), hrs=sum(Hours.Worked), cost=sum(Total.Cost))
DF_Year$PM.Count <- DF_temp$n[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$PM.Hours <- DF_temp$hrs[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$PM.Cost <- DF_temp$cost[match(DF_Year$Year, DF_temp$Complete.Year)]
#### CAL WOs
DF_temp <- DF_WO[DF_WO$WO.Type=="CAL",] %>%
  group_by(Complete.Year) %>%
  summarise(n = n(), hrs=sum(Hours.Worked), cost=sum(Total.Cost))
DF_Year$CAL.Count <- DF_temp$n[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$CAL.Hours <- DF_temp$hrs[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$CAL.Cost <- DF_temp$cost[match(DF_Year$Year, DF_temp$Complete.Year)]
#### MOD WOs
DF_temp <- DF_WO[DF_WO$WO.Type=="MOD",] %>%
  group_by(Complete.Year) %>%
  summarise(n = n(), hrs=sum(Hours.Worked), cost=sum(Total.Cost))
DF_Year$MOD.Count <- DF_temp$n[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$MOD.Hours <- DF_temp$hrs[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$MOD.Cost <- DF_temp$cost[match(DF_Year$Year, DF_temp$Complete.Year)]
#### FAIL WOs
DF_temp <- DF_WO[(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & (DF_WO$Impact!="NOFAIL"),] %>%
  group_by(Complete.Year) %>%
  summarise(n = n(), hrs=sum(Hours.Worked), cost=sum(Total.Cost))
DF_Year$FAIL.Count <- DF_temp$n[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$FAIL.Hours <- DF_temp$hrs[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$FAIL.Cost <- DF_temp$cost[match(DF_Year$Year, DF_temp$Complete.Year)]
#### Urgent COR WOs
DF_temp <- DF_WO[(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & (DF_WO$Impact!="NOFAIL") & DF_WO$Priority<=2,] %>%
  group_by(Complete.Year) %>%
  summarise(n = n(), hrs=sum(Hours.Worked), cost=sum(Total.Cost))
DF_Year$Urgent.Count <- DF_temp$n[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$Urgent.Hours <- DF_temp$hrs[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$Urgent.Cost <- DF_temp$cost[match(DF_Year$Year, DF_temp$Complete.Year)]
#### Serious COR WOs
DF_temp <- DF_WO[(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & (DF_WO$Impact=="SHUTDOWN" | DF_WO$Impact == "REDUCTN"),] %>%
  group_by(Complete.Year) %>%
  summarise(n = n(), hrs=sum(Hours.Worked), cost=sum(Total.Cost))
DF_Year$Serious.Count <- DF_temp$n[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$Serious.Hours <- DF_temp$hrs[match(DF_Year$Year, DF_temp$Complete.Year)]
DF_Year$Serious.Cost <- DF_temp$cost[match(DF_Year$Year, DF_temp$Complete.Year)]
#### Those are all absolute counts of WOs - add a WO rate (count/#equip)
DF_Year <- transform(DF_Year, WO.Rate = (round(WO.Count/nrow(DF_Equip),3)))
DF_Year <- transform(DF_Year, COR.Rate = (round(COR.Count/nrow(DF_Equip),3)))
DF_Year <- transform(DF_Year, PM.Rate = (round(PM.Count/nrow(DF_Equip),3)))
DF_Year <- transform(DF_Year, CAL.Rate = (round(CAL.Count/nrow(DF_Equip),3)))
DF_Year <- transform(DF_Year, MOD.Rate = (round(MOD.Count/nrow(DF_Equip),3)))
DF_Year <- transform(DF_Year, FAIL.Rate = (round(FAIL.Count/nrow(DF_Equip),3)))
DF_Year <- transform(DF_Year, Urgent.Rate = (round(Urgent.Count/nrow(DF_Equip),3)))
DF_Year <- transform(DF_Year, Serious.Rate = (round(Serious.Count/nrow(DF_Equip),3)))

#### Add WO counts to Equip DF
#### Collect the counts, hours, and costs in a temp dataframe
DF_temp <- DF_WO %>%
  group_by(Object.Code) %>%
  summarise(n = n(), hrs = sum(Hours.Worked), cost = sum(Total.Cost))
#### Transfer counts, hours, and costs to DF_Equip
DF_Equip$WO.Count <- DF_temp$n[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$WO.Hours <- DF_temp$hrs[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$WO.Cost <- DF_temp$cost[match(DF_Equip$Object, DF_temp$Object.Code)]
#### Replace NA with 0
DF_Equip$WO.Count[is.na(DF_Equip$WO.Count)] <- 0
DF_Equip$WO.Hours[is.na(DF_Equip$WO.Hours)] <- 0
DF_Equip$WO.Cost[is.na(DF_Equip$WO.Cost)] <- 0
rm(DF_temp)
#### Add COR WO versions to Equip DF
#### Collect the counts in a temp dataframe
DF_temp <- DF_WO[DF_WO$WO.Type=="COR", ] %>%
  group_by(Object.Code) %>%
  summarise(n = n(), hrs = sum(Hours.Worked), cost = sum(Total.Cost))
#### Transfer counts to DF_Equip
DF_Equip$COR.Count <- DF_temp$n[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$COR.Hours <- DF_temp$hrs[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$COR.Cost <- DF_temp$cost[match(DF_Equip$Object, DF_temp$Object.Code)]
#### Replace NA with 0
DF_Equip$COR.Count[is.na(DF_Equip$COR.Count)] <- 0
DF_Equip$COR.Hours[is.na(DF_Equip$COR.Hours)] <- 0
DF_Equip$COR.Cost[is.na(DF_Equip$COR.Cost)] <- 0
rm(DF_temp)
#### Add Urgent WO versions to Equip DF
#### Collect the counts in a temp dataframe
DF_temp <- DF_WO[(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & (DF_WO$Impact!="NOFAIL") & DF_WO$Priority<=2,] %>%
  group_by(Object.Code) %>%
  summarise(n = n(), hrs = sum(Hours.Worked), cost = sum(Total.Cost))
#### Transfer counts to DF_Equip
DF_Equip$Urgent.Count <- DF_temp$n[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$Urgent.Hours <- DF_temp$hrs[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$Urgent.Cost <- DF_temp$cost[match(DF_Equip$Object, DF_temp$Object.Code)]
#### Replace NA with 0
DF_Equip$Urgent.Count[is.na(DF_Equip$Urgent.Count)] <- 0
DF_Equip$Urgent.Hours[is.na(DF_Equip$Urgent.Hours)] <- 0
DF_Equip$Urgent.Cost[is.na(DF_Equip$Urgent.Cost)] <- 0
rm(DF_temp)
#### Add Serious WO versions to Equip DF
#### Collect the counts in a temp dataframe
DF_temp <- DF_WO[(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & (DF_WO$Impact=="SHUTDOWN" | DF_WO$Impact == "REDUCTN"),] %>%
  group_by(Object.Code) %>%
  summarise(n = n(), hrs = sum(Hours.Worked), cost = sum(Total.Cost))
#### Transfer counts to DF_Equip
DF_Equip$Serious.Count <- DF_temp$n[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$Serious.Hours <- DF_temp$hrs[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$Serious.Cost <- DF_temp$cost[match(DF_Equip$Object, DF_temp$Object.Code)]
#### Replace NA with 0
DF_Equip$Serious.Count[is.na(DF_Equip$Serious.Count)] <- 0
DF_Equip$Serious.Hours[is.na(DF_Equip$Serious.Hours)] <- 0
DF_Equip$Serious.Cost[is.na(DF_Equip$Serious.Cost)] <- 0
rm(DF_temp)
#### Add MOD WO versions to Equip DF
#### Collect the counts in a temp dataframe
DF_temp <- DF_WO[DF_WO$WO.Type=="MOD", ] %>%
  group_by(Object.Code) %>%
  summarise(n = n(), hrs = sum(Hours.Worked), cost = sum(Total.Cost))
#### Transfer counts to DF_Equip
DF_Equip$MOD.Count <- DF_temp$n[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$MOD.Hours <- DF_temp$hrs[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$MOD.Cost <- DF_temp$cost[match(DF_Equip$Object, DF_temp$Object.Code)]
#### Replace NA with 0
DF_Equip$MOD.Count[is.na(DF_Equip$MOD.Count)] <- 0
DF_Equip$MOD.Hours[is.na(DF_Equip$MOD.Hours)] <- 0
DF_Equip$MOD.Cost[is.na(DF_Equip$MOD.Cost)] <- 0
rm(DF_temp)
#### Add PM WO versions to Equip DF
#### Collect the counts in a temp dataframe
DF_temp <- DF_WO[DF_WO$WO.Type=="PM", ] %>%
  group_by(Object.Code) %>%
  summarise(n = n(), hrs = sum(Hours.Worked), cost = sum(Total.Cost))
#### Transfer counts to DF_Equip
DF_Equip$PM.Count <- DF_temp$n[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$PM.Hours <- DF_temp$hrs[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$PM.Cost <- DF_temp$cost[match(DF_Equip$Object, DF_temp$Object.Code)]
#### Replace NA with 0
DF_Equip$PM.Count[is.na(DF_Equip$PM.Count)] <- 0
DF_Equip$PM.Hours[is.na(DF_Equip$PM.Hours)] <- 0
DF_Equip$PM.Cost[is.na(DF_Equip$PM.Cost)] <- 0
rm(DF_temp)
#### Add CAL WO versions to Equip DF
#### Collect the counts in a temp dataframe
DF_temp <- DF_WO[DF_WO$WO.Type=="CAL", ] %>%
  group_by(Object.Code) %>%
  summarise(n = n(), hrs = sum(Hours.Worked), cost = sum(Total.Cost))
#### Transfer counts to DF_Equip
DF_Equip$CAL.Count <- DF_temp$n[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$CAL.Hours <- DF_temp$hrs[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$CAL.Cost <- DF_temp$cost[match(DF_Equip$Object, DF_temp$Object.Code)]
#### Replace NA with 0
DF_Equip$CAL.Count[is.na(DF_Equip$CAL.Count)] <- 0
DF_Equip$CAL.Hours[is.na(DF_Equip$CAL.Hours)] <- 0
DF_Equip$CAL.Cost[is.na(DF_Equip$CAL.Cost)] <- 0
rm(DF_temp)
#### Add FAIL WO versions to Equip DF
#### Collect the counts in a temp dataframe
DF_temp <- DF_WO[(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & (DF_WO$Impact!="NOFAIL"),] %>%
  group_by(Object.Code) %>%
  summarise(n = n(), hrs = sum(Hours.Worked), cost = sum(Total.Cost))
#### Transfer counts to DF_Equip
DF_Equip$FAIL.Count <- DF_temp$n[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$FAIL.Hours <- DF_temp$hrs[match(DF_Equip$Object, DF_temp$Object.Code)]
DF_Equip$FAIL.Cost <- DF_temp$cost[match(DF_Equip$Object, DF_temp$Object.Code)]
#### Replace NA with 0
DF_Equip$FAIL.Count[is.na(DF_Equip$FAIL.Count)] <- 0
DF_Equip$FAIL.Hours[is.na(DF_Equip$FAIL.Hours)] <- 0
DF_Equip$FAIL.Cost[is.na(DF_Equip$FAIL.Cost)] <- 0
rm(DF_temp)

#### Add FAIL Downtime totals to Equip DF
DF_temp <- DF_WO[(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & (DF_WO$Impact!="NOFAIL"),] %>%
  group_by(Object.Code) %>%
  summarise(dt = sum(DowntimeHours))
#### Transfer counts to DF_Equip
DF_Equip$DT.Sum <- DF_temp$dt[match(DF_Equip$Object, DF_temp$Object.Code)]
#### Replace NA with 0
DF_Equip$DT.Sum[is.na(DF_Equip$DT.Sum)] <- 0
rm(DF_temp)

#### Add WO count totals to ClassCat DF
#### Collect the counts in a temp dataframe (all, COR, and PM all at once)
DF_temp <- DF_Equip %>%
  group_by(ClassCategory) %>%
  summarise(sumWO = sum(WO.Count), sumCOR = sum(COR.Count), sumPM = sum(PM.Count), sumUrgent = sum(Urgent.Count), sumSerious = sum(Serious.Count), sumCAL = sum(CAL.Count), sumMOD = sum(MOD.Count), sumFAIL = sum(FAIL.Count))
#### Transfer counts to DF_ClassCat
DF_ClassCat$WO.Count <- DF_temp$sumWO[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$COR.Count <- DF_temp$sumCOR[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$MOD.Count <- DF_temp$sumMOD[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$PM.Count <- DF_temp$sumPM[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$CAL.Count <- DF_temp$sumCAL[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$FAIL.Count <- DF_temp$sumFAIL[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$Urgent.Count <- DF_temp$sumUrgent[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$Serious.Count <- DF_temp$sumSerious[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
#### Replace NA with 0
DF_ClassCat$WO.Count[is.na(DF_ClassCat$WO.Count)] <- 0
DF_ClassCat$COR.Count[is.na(DF_ClassCat$COR.Count)] <- 0
DF_ClassCat$MOD.Count[is.na(DF_ClassCat$CAL.Count)] <- 0
DF_ClassCat$PM.Count[is.na(DF_ClassCat$PM.Count)] <- 0
DF_ClassCat$CAL.Count[is.na(DF_ClassCat$CAL.Count)] <- 0
DF_ClassCat$FAIL.Count[is.na(DF_ClassCat$FAIL.Count)] <- 0
DF_ClassCat$Urgent.Count[is.na(DF_ClassCat$Urgent.Count)] <- 0
DF_ClassCat$Serious.Count[is.na(DF_ClassCat$Serious.Count)] <- 0
rm(DF_temp)
#### Add WO hours totals ClassCat DF
#### Collect the hours in a temp dataframe (all, COR, and PM all at once)
DF_temp <- DF_Equip %>%
  group_by(ClassCategory) %>%
  summarise(sumWO = sum(WO.Hours), sumCOR = sum(COR.Hours), sumPM = sum(PM.Hours), sumUrgent = sum(Urgent.Hours), sumSerious = sum(Serious.Hours), sumCAL = sum(CAL.Hours), sumMOD = sum(MOD.Hours), sumFAIL = sum(FAIL.Hours))
#### Transfer counts to DF_ClassCat
DF_ClassCat$WO.Hours <- DF_temp$sumWO[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$COR.Hours <- DF_temp$sumCOR[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$MOD.Hours <- DF_temp$sumMOD[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$PM.Hours <- DF_temp$sumPM[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$CAL.Hours <- DF_temp$sumCAL[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$FAIL.Hours <- DF_temp$sumFAIL[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$Urgent.Hours <- DF_temp$sumUrgent[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$Serious.Hours <- DF_temp$sumSerious[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
#### Replace NA with 0
DF_ClassCat$WO.Hours[is.na(DF_ClassCat$WO.Hours)] <- 0
DF_ClassCat$COR.Hours[is.na(DF_ClassCat$COR.Hours)] <- 0
DF_ClassCat$MOD.Hours[is.na(DF_ClassCat$MOD.Hours)] <- 0
DF_ClassCat$PM.Hours[is.na(DF_ClassCat$PM.Hours)] <- 0
DF_ClassCat$CAL.Hours[is.na(DF_ClassCat$CAL.Hours)] <- 0
DF_ClassCat$FAIL.Hours[is.na(DF_ClassCat$FAIL.Hours)] <- 0
DF_ClassCat$Urgent.Hours[is.na(DF_ClassCat$Urgent.Hours)] <- 0
DF_ClassCat$Serious.Hours[is.na(DF_ClassCat$Serious.Hours)] <- 0
rm(DF_temp)
#### Add WO costs totals ClassCat DF
#### Collect the costs in a temp dataframe (all, COR, and PM all at once)
DF_temp <- DF_Equip %>%
  group_by(ClassCategory) %>%
  summarise(sumWO = sum(WO.Cost), sumCOR = sum(COR.Cost), sumPM = sum(PM.Cost), sumUrgent = sum(Urgent.Cost), sumSerious = sum(Serious.Cost), sumCAL = sum(CAL.Cost), sumMOD = sum(MOD.Cost), sumFAIL = sum(FAIL.Cost))
#### Transfer counts to DF_ClassCat
DF_ClassCat$WO.Cost <- DF_temp$sumWO[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$COR.Cost <- DF_temp$sumCOR[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$MOD.Cost <- DF_temp$sumMOD[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$PM.Cost <- DF_temp$sumPM[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$CAL.Cost <- DF_temp$sumCAL[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$FAIL.Cost <- DF_temp$sumFAIL[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$Urgent.Cost <- DF_temp$sumUrgent[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
DF_ClassCat$Serious.Cost <- DF_temp$sumSerious[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
#### Replace NA with 0
DF_ClassCat$WO.Cost[is.na(DF_ClassCat$WO.Cost)] <- 0
DF_ClassCat$COR.Cost[is.na(DF_ClassCat$COR.Cost)] <- 0
DF_ClassCat$MOD.Cost[is.na(DF_ClassCat$CAL.Cost)] <- 0
DF_ClassCat$PM.Cost[is.na(DF_ClassCat$PM.Cost)] <- 0
DF_ClassCat$CAL.Cost[is.na(DF_ClassCat$CAL.Cost)] <- 0
DF_ClassCat$FAIL.Cost[is.na(DF_ClassCat$FAIL.Cost)] <- 0
DF_ClassCat$Urgent.Cost[is.na(DF_ClassCat$Urgent.Cost)] <- 0
DF_ClassCat$Serious.Cost[is.na(DF_ClassCat$Serious.Cost)] <- 0
rm(DF_temp)

#### Add WO downtime totals ClassCat DF
#### Collect the dt in a temp dataframe (all, COR, and PM all at once)
DF_temp <- DF_Equip %>%
  group_by(ClassCategory) %>%
  summarise(dt = sum(DT.Sum))
#### Transfer counts to DF_ClassCat
DF_ClassCat$WO.DT <- DF_temp$dt[match(DF_ClassCat$ClassCategory, DF_temp$ClassCategory)]
#### Replace NA with 0
DF_ClassCat$WO.DT[is.na(DF_ClassCat$WO.DT)] <- 0
rm(DF_temp)

#### Add COR WO Rates (Count, Hours, Costs) to ClassCat DF
#### Annual Rate = #WOs/#Equip
DF_ClassCat <- transform(DF_ClassCat, WO.CountPerYr = (WO.Count/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, WO.HoursPerYr = (WO.Hours/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, WO.CostPerYr = (WO.Cost/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, COR.CountPerYr = (COR.Count/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, COR.HoursPerYr = (COR.Hours/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, COR.CostPerYr = (COR.Cost/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, MOD.CountPerYr = (MOD.Count/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, MOD.HoursPerYr = (MOD.Hours/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, MOD.CostPerYr = (MOD.Cost/Count)/nrow(DF_Year))
DF_ClassCat <- transform(DF_ClassCat, PM.CountPerYr = (PM.Count/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, PM.HoursPerYr = (PM.Hours/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, PM.CostPerYr = (PM.Cost/Count)/nrow(DF_Year))
DF_ClassCat <- transform(DF_ClassCat, CAL.CountPerYr = (CAL.Count/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, CAL.HoursPerYr = (CAL.Hours/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, CAL.CostPerYr = (CAL.Cost/Count)/nrow(DF_Year))
DF_ClassCat <- transform(DF_ClassCat, FAIL.CountPerYr = (FAIL.Count/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, FAIL.HoursPerYr = (FAIL.Hours/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, FAIL.CostPerYr = (FAIL.Cost/Count)/nrow(DF_Year))
DF_ClassCat <- transform(DF_ClassCat, Urgent.CountPerYr = (Urgent.Count/Count)/nrow(DF_Year))
DF_ClassCat <- transform(DF_ClassCat, Urgent.HoursPerYr = (Urgent.Hours/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, Urgent.CostPerYr = (Urgent.Cost/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, Serious.CountPerYr = (Serious.Count/Count)/nrow(DF_Year))
DF_ClassCat <- transform(DF_ClassCat, Serious.HoursPerYr = (Serious.Hours/Count)/nrow(DF_Year)) 
DF_ClassCat <- transform(DF_ClassCat, Serious.CostPerYr = (Serious.Cost/Count)/nrow(DF_Year))
DF_ClassCat <- transform(DF_ClassCat, WO.DTPerYr = (WO.DT/Count)/nrow(DF_Year))


## Make yearly dataframes to support 'Top3' charting

#### Make a ClassCat by Year&Type DF
#### Make a DF that counts WOs in groups of Classcat, Type, & Year
DF_CCYearType <- DF_WO %>%
  group_by(ClassCategory, WO.Type, Impact, Complete.Year) %>%  
  summarise(n = n())
##### Add columns from classCat to have access to equipment count per classCat to calc rates for each type-year combo
DF_CCYearType <- merge(DF_CCYearType, DF_ClassCat, by.x="ClassCategory", by.y="ClassCategory", all.x=T)
##### Rename n to something more understandable
colnames(DF_CCYearType)[colnames(DF_CCYearType)=="n"] <- "WO.Count.Annual"
##### Trim to just the desired columns
DF_CCYearType <- subset(DF_CCYearType, select=c(ClassCategory, WO.Type, Impact, Complete.Year, WO.Count.Annual, Class, Category, Count))
##### Add a rate that accounts for size of classCat
DF_CCYearType <- transform(DF_CCYearType, WO.Count.Rate = round(WO.Count.Annual/Count,3))

#### Make a EAMS ID by Year&Type DF
#### Make a DF that counts WOs in groups of EAMS ID, Type, & Year
DF_EqYearType <- DF_WO %>%
  group_by(Object.Code, WO.Type, Impact, Complete.Year) %>%  
  summarise(n = n())
##### Add columns from Equip to have access to equipment count per EAMS ID to calc rates for each type-year combo
DF_EqYearType <- merge(DF_EqYearType, DF_Equip, by.x="Object.Code", by.y="Object", all.x=T)
##### Rename n to something more understandable
colnames(DF_EqYearType)[colnames(DF_EqYearType)=="n"] <- "WO.Count.Annual"
##### Trim to just the desired columns
DF_EqYearType <- subset(DF_EqYearType, select=c(Object.Code, WO.Type, Impact, Complete.Year, WO.Count.Annual, Class, Category))
##### Don't need a rate as this is by EAMS ID - so there is only a count of 1 for each


## WO Trend Plots
### Calculate averages
VAR_avgWOCount <- sum(DF_Year$WO.Count)/nrow(DF_Year)
VAR_avgWOHours <- sum(DF_Year$WO.Hours)/nrow(DF_Year)
VAR_avgWOCost <- sum(DF_Year$WO.Cost)/nrow(DF_Year)
VAR_avgCORCount <- sum(DF_Year$COR.Count)/nrow(DF_Year)
VAR_avgCORHours <- sum(DF_Year$COR.Hours)/nrow(DF_Year)
VAR_avgCORCost <- sum(DF_Year$COR.Cost)/nrow(DF_Year)
VAR_avgMODCount <- sum(DF_Year$MOD.Count)/nrow(DF_Year)
VAR_avgMODHours <- sum(DF_Year$MOD.Hours)/nrow(DF_Year)
VAR_avgMODCost <- sum(DF_Year$MOD.Cost)/nrow(DF_Year)
VAR_avgPMCount <- sum(DF_Year$PM.Count)/nrow(DF_Year)
VAR_avgPMHours <- sum(DF_Year$PM.Hours)/nrow(DF_Year)
VAR_avgPMCost <- sum(DF_Year$PM.Cost)/nrow(DF_Year)
VAR_avgCALCount <- sum(DF_Year$CAL.Count)/nrow(DF_Year)
VAR_avgCALHours <- sum(DF_Year$CAL.Hours)/nrow(DF_Year)
VAR_avgCALCost <- sum(DF_Year$CAL.Cost)/nrow(DF_Year)
VAR_avgFAILCount <- sum(DF_Year$FAIL.Count)/nrow(DF_Year)
VAR_avgFAILHours <- sum(DF_Year$FAIL.Hours)/nrow(DF_Year)
VAR_avgFAILCost <- sum(DF_Year$FAIL.Cost)/nrow(DF_Year)
VAR_avgURGENTCount <- sum(DF_Year$Urgent.Count)/nrow(DF_Year)
VAR_avgURGENTHours <- sum(DF_Year$Urgent.Hours)/nrow(DF_Year)
VAR_avgURGENTCost <- sum(DF_Year$Urgent.Cost)/nrow(DF_Year)
VAR_avgSERIOUSCount <- sum(DF_Year$Serious.Count)/nrow(DF_Year)
VAR_avgSERIOUSHours <- sum(DF_Year$Serious.Hours)/nrow(DF_Year)
VAR_avgSERIOUSCost <- sum(DF_Year$Serious.Cost)/nrow(DF_Year)
### Put deviations from average by year into DF_Year
DF_Year <- transform(DF_Year, WO.CountDev = (round(WO.Count/VAR_avgWOCount,2)))
DF_Year <- transform(DF_Year, WO.HoursDev = (round(WO.Hours/VAR_avgWOHours,2)))
DF_Year <- transform(DF_Year, WO.CostDev = (round(WO.Cost/VAR_avgWOCost,2)))
DF_Year <- transform(DF_Year, COR.CountDev = (round(COR.Count/VAR_avgCORCount,2)))
DF_Year <- transform(DF_Year, COR.HoursDev = (round(COR.Hours/VAR_avgCORHours,2)))
DF_Year <- transform(DF_Year, COR.CostDev = (round(COR.Cost/VAR_avgCORCost,2)))
DF_Year <- transform(DF_Year, MOD.CountDev = (round(MOD.Count/VAR_avgMODCount,2)))
DF_Year <- transform(DF_Year, MOD.HoursDev = (round(MOD.Hours/VAR_avgMODHours,2)))
DF_Year <- transform(DF_Year, MOD.CostDev = (round(MOD.Cost/VAR_avgMODCost,2)))
DF_Year <- transform(DF_Year, PM.CountDev = (round(PM.Count/VAR_avgPMCount,2)))
DF_Year <- transform(DF_Year, PM.HoursDev = (round(PM.Hours/VAR_avgPMHours,2)))
DF_Year <- transform(DF_Year, PM.CostDev = (round(PM.Cost/VAR_avgPMCost,2)))
DF_Year <- transform(DF_Year, CAL.CountDev = (round(CAL.Count/VAR_avgCALCount,2)))
DF_Year <- transform(DF_Year, CAL.HoursDev = (round(CAL.Hours/VAR_avgCALHours,2)))
DF_Year <- transform(DF_Year, CAL.CostDev = (round(CAL.Cost/VAR_avgCALCost,2)))
DF_Year <- transform(DF_Year, FAIL.CountDev = (round(FAIL.Count/VAR_avgFAILCount,2)))
DF_Year <- transform(DF_Year, FAIL.HoursDev = (round(FAIL.Hours/VAR_avgFAILHours,2)))
DF_Year <- transform(DF_Year, FAIL.CostDev = (round(FAIL.Cost/VAR_avgFAILCost,2)))
DF_Year <- transform(DF_Year, Urgent.CountDev = (round(Urgent.Count/VAR_avgURGENTCount,2)))
DF_Year <- transform(DF_Year, Urgent.HoursDev = (round(Urgent.Hours/VAR_avgURGENTHours,2)))
DF_Year <- transform(DF_Year, Urgent.CostDev = (round(Urgent.Cost/VAR_avgURGENTCost,2)))
DF_Year <- transform(DF_Year, Serious.CountDev = (round(Serious.Count/VAR_avgSERIOUSCount,2)))
DF_Year <- transform(DF_Year, Serious.HoursDev = (round(Serious.Hours/VAR_avgSERIOUSHours,2)))
DF_Year <- transform(DF_Year, Serious.CostDev = (round(Serious.Cost/VAR_avgSERIOUSCost,2)))

### Plot for all WOs
#### Grab the pertinent data for plotting
LST_keep <- c("Year", "WO.CountDev", "WO.HoursDev", "WO.CostDev")
DF_Plot <- DF_Year[LST_keep]
#### Produce a transposed DF for use in plotting
DF_Plot <- gather(DF_Plot, Trend, Dev, WO.CountDev:WO.CostDev)
DF_Plot[DF_Plot == "WO.CountDev"] <- "Count"
DF_Plot[DF_Plot == "WO.HoursDev"] <- "Hours"
DF_Plot[DF_Plot == "WO.CostDev"] <- "Cost"
#### Plot on a line graph
PLOT_WOTrend <- ggplot(data=DF_Plot, aes(x=Year, y=Dev, color=Trend)) +
  geom_line(linewidth=1.5) +
  scale_color_manual(values=c('chartreuse4', 'firebrick4', 'darkblue')) +
  scale_y_continuous(expand = expansion(mult = c(.05, .05)), limits = c(0, 2)) +
  geom_hline(yintercept = 1, linetype = "dashed", color = "red", linewidth = 1) +
  annotate("text", x=max(DF_Year$Year), y=0.4, label=paste("Averages:","\n",format(round(VAR_avgWOCount,0), nsmall=0, big.mark=",")," WOs\n",format(round(VAR_avgWOHours,0), nsmall=0, big.mark=",")," Hrs\n","$",format(round(VAR_avgWOCost,0), nsmall=0, big.mark=","), sep=""),hjust=0, vjust=1, size=4) +
  coord_cartesian(clip="off") +
  labs(title="Work Order Trends") +
  xlab("Year") +
  ylab("Deviation From Average") +
  guides(color = guide_legend(reverse=T)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_WOTrend
rm(DF_Plot)

### Plot for COR WOs
#### Grab the pertinent data for plotting
LST_keep <- c("Year", "COR.CountDev", "COR.HoursDev", "COR.CostDev")
DF_Plot <- DF_Year[LST_keep]
#### Produce a transposed DF for use in plotting
DF_Plot <- gather(DF_Plot, Trend, Dev, COR.CountDev:COR.CostDev)
DF_Plot[DF_Plot == "COR.CountDev"] <- "Count"
DF_Plot[DF_Plot == "COR.HoursDev"] <- "Hours"
DF_Plot[DF_Plot == "COR.CostDev"] <- "Cost"
#### Plot on a line graph
PLOT_CORTrend <- ggplot(data=DF_Plot, aes(x=Year, y=Dev, color=Trend)) +
  geom_line(linewidth=1.5) +
  scale_color_manual(values=c('chartreuse4', 'firebrick4', 'darkblue')) +
  scale_y_continuous(expand = expansion(mult = c(.05, .05)), limits = c(0, 2)) +
  geom_hline(yintercept = 1, linetype = "dashed", color = "red", linewidth = 1) +
  annotate("text", x=max(DF_Year$Year), y=0.4, label=paste("Averages:","\n",format(round(VAR_avgCORCount,0), nsmall=0, big.mark=",")," WOs\n",format(round(VAR_avgCORHours,0), nsmall=0, big.mark=",")," Hrs\n","$",format(round(VAR_avgCORCost,0), nsmall=0, big.mark=","), sep=""),hjust=0, vjust=1, size=4) +
  coord_cartesian(clip="off") +
  labs(title="COR Work Order Trends") +
  xlab("Year") +
  ylab("Deviation From Average") +
  guides(color = guide_legend(reverse=T)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_CORTrend
rm(DF_Plot)

### Plot for MOD WOs
#### Grab the pertinent data for plotting
LST_keep <- c("Year", "MOD.CountDev", "MOD.HoursDev", "MOD.CostDev")
DF_Plot <- DF_Year[LST_keep]
#### Produce a transposed DF for use in plotting
DF_Plot <- gather(DF_Plot, Trend, Dev, MOD.CountDev:MOD.CostDev)
DF_Plot[DF_Plot == "MOD.CountDev"] <- "Count"
DF_Plot[DF_Plot == "MOD.HoursDev"] <- "Hours"
DF_Plot[DF_Plot == "MOD.CostDev"] <- "Cost"
#### Plot on a line graph
PLOT_MODTrend <- ggplot(data=DF_Plot, aes(x=Year, y=Dev, color=Trend)) +
  geom_line(linewidth=1.5) +
  scale_color_manual(values=c('chartreuse4', 'firebrick4', 'darkblue')) +
  scale_y_continuous(expand = expansion(mult = c(.05, .05)), limits = c(0, 2)) +
  geom_hline(yintercept = 1, linetype = "dashed", color = "red", linewidth = 1) +
  annotate("text", x=max(DF_Year$Year), y=0.4, label=paste("Averages:","\n",format(round(VAR_avgMODCount,0), nsmall=0, big.mark=",")," WOs\n",format(round(VAR_avgMODHours,0), nsmall=0, big.mark=",")," Hrs\n","$",format(round(VAR_avgMODCost,0), nsmall=0, big.mark=","), sep=""),hjust=0, vjust=1, size=4) +
  coord_cartesian(clip="off") +
  labs(title="MOD Work Order Trends") +
  xlab("Year") +
  ylab("Deviation From Average") +
  guides(color = guide_legend(reverse=T)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_MODTrend
rm(DF_Plot)

### Plot for PM WOs
#### Grab the pertinent data for plotting
LST_keep <- c("Year", "PM.CountDev", "PM.HoursDev", "PM.CostDev")
DF_Plot <- DF_Year[LST_keep]
#### Produce a transposed DF for use in plotting
DF_Plot <- gather(DF_Plot, Trend, Dev, PM.CountDev:PM.CostDev)
DF_Plot[DF_Plot == "PM.CountDev"] <- "Count"
DF_Plot[DF_Plot == "PM.HoursDev"] <- "Hours"
DF_Plot[DF_Plot == "PM.CostDev"] <- "Cost"
#### Plot on a line graph
PLOT_PMTrend <- ggplot(data=DF_Plot, aes(x=Year, y=Dev, color=Trend)) +
  geom_line(linewidth=1.5) +
  scale_color_manual(values=c('chartreuse4', 'firebrick4', 'darkblue')) +
  scale_y_continuous(expand = expansion(mult = c(.05, .05)), limits = c(0, 2)) +
  geom_hline(yintercept = 1, linetype = "dashed", color = "red", linewidth = 1) +
  annotate("text", x=max(DF_Year$Year), y=0.4, label=paste("Averages:","\n",format(round(VAR_avgPMCount,0), nsmall=0, big.mark=",")," WOs\n",format(round(VAR_avgPMHours,0), nsmall=0, big.mark=",")," Hrs\n","$",format(round(VAR_avgPMCost,0), nsmall=0, big.mark=","), sep=""),hjust=0, vjust=1, size=4) +
  coord_cartesian(clip="off") +
  labs(title="PM Work Order Trends") +
  xlab("Year") +
  ylab("Deviation From Average") +
  guides(color = guide_legend(reverse=T)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_PMTrend
rm(DF_Plot)

### Plot for CAL WOs
#### Grab the pertinent data for plotting
LST_keep <- c("Year", "CAL.CountDev", "CAL.HoursDev", "CAL.CostDev")
DF_Plot <- DF_Year[LST_keep]
#### Produce a transposed DF for use in plotting
DF_Plot <- gather(DF_Plot, Trend, Dev, CAL.CountDev:CAL.CostDev)
DF_Plot[DF_Plot == "CAL.CountDev"] <- "Count"
DF_Plot[DF_Plot == "CAL.HoursDev"] <- "Hours"
DF_Plot[DF_Plot == "CAL.CostDev"] <- "Cost"
#### Plot on a line graph
PLOT_CALTrend <- ggplot(data=DF_Plot, aes(x=Year, y=Dev, color=Trend)) +
  geom_line(linewidth=1.5) +
  scale_color_manual(values=c('chartreuse4', 'firebrick4', 'darkblue')) +
  scale_y_continuous(expand = expansion(mult = c(.05, .05)), limits = c(0, 2)) +
  geom_hline(yintercept = 1, linetype = "dashed", color = "red", linewidth = 1) +
  annotate("text", x=max(DF_Year$Year), y=0.4, label=paste("Averages:","\n",format(round(VAR_avgCALCount,0), nsmall=0, big.mark=",")," WOs\n",format(round(VAR_avgCALHours,0), nsmall=0, big.mark=",")," Hrs\n","$",format(round(VAR_avgCALCost,0), nsmall=0, big.mark=","), sep=""),hjust=0, vjust=1, size=4) +
  coord_cartesian(clip="off") +
  labs(title="CAL Work Order Trends") +
  xlab("Year") +
  ylab("Deviation From Average") +
  guides(color = guide_legend(reverse=T)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_CALTrend
rm(DF_Plot)

### Plot for FAIL WOs
#### Grab the pertinent data for plotting
LST_keep <- c("Year", "FAIL.CountDev", "FAIL.HoursDev", "FAIL.CostDev")
DF_Plot <- DF_Year[LST_keep]
#### Produce a transposed DF for use in plotting
DF_Plot <- gather(DF_Plot, Trend, Dev, FAIL.CountDev:FAIL.CostDev)
DF_Plot[DF_Plot == "FAIL.CountDev"] <- "Count"
DF_Plot[DF_Plot == "FAIL.HoursDev"] <- "Hours"
DF_Plot[DF_Plot == "FAIL.CostDev"] <- "Cost"
#### Plot on a line graph
PLOT_FAILTrend <- ggplot(data=DF_Plot, aes(x=Year, y=Dev, color=Trend)) +
  geom_line(linewidth=1.5) +
  scale_color_manual(values=c('chartreuse4', 'firebrick4', 'darkblue')) +
  scale_y_continuous(expand = expansion(mult = c(.05, .05)), limits = c(0, 2)) +
  geom_hline(yintercept = 1, linetype = "dashed", color = "red", linewidth = 1) +
  annotate("text", x=max(DF_Year$Year), y=0.4, label=paste("Averages:","\n",format(round(VAR_avgFAILCount,0), nsmall=0, big.mark=",")," WOs\n",format(round(VAR_avgFAILHours,0), nsmall=0, big.mark=",")," Hrs\n","$",format(round(VAR_avgFAILCost,0), nsmall=0, big.mark=","), sep=""),hjust=0, vjust=1, size=4) +
  coord_cartesian(clip="off") +
  labs(title="Failure Work Order Trends") +
  xlab("Year") +
  ylab("Deviation From Average") +
  guides(color = guide_legend(reverse=T)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_FAILTrend
rm(DF_Plot)

### Plot for Serious WOs
#### Grab the pertinent data for plotting
LST_keep <- c("Year", "Serious.CountDev", "Serious.HoursDev", "Serious.CostDev")
DF_Plot <- DF_Year[LST_keep]
#### Produce a transposed DF for use in plotting
DF_Plot <- gather(DF_Plot, Trend, Dev, Serious.CountDev:Serious.CostDev)
DF_Plot[DF_Plot == "Serious.CountDev"] <- "Count"
DF_Plot[DF_Plot == "Serious.HoursDev"] <- "Hours"
DF_Plot[DF_Plot == "Serious.CostDev"] <- "Cost"
#### Plot on a line graph
PLOT_SERIOUSTrend <- ggplot(data=DF_Plot, aes(x=Year, y=Dev, color=Trend)) +
  geom_line(linewidth=1.5) +
  scale_color_manual(values=c('chartreuse4', 'firebrick4', 'darkblue')) +
  scale_y_continuous(expand = expansion(mult = c(.05, .05)), limits = c(0, 2)) +
  geom_hline(yintercept = 1, linetype = "dashed", color = "red", linewidth = 1) +
  annotate("text", x=max(DF_Year$Year), y=0.4, label=paste("Averages:","\n",format(round(VAR_avgFAILCount,0), nsmall=0, big.mark=",")," WOs\n",format(round(VAR_avgFAILHours,0), nsmall=0, big.mark=",")," Hrs\n","$",format(round(VAR_avgFAILCost,0), nsmall=0, big.mark=","), sep=""),hjust=0, vjust=1, size=4) +
  coord_cartesian(clip="off") +
  labs(title="Serious Failure Work Order Trends") +
  xlab("Year") +
  ylab("Deviation From Average") +
  guides(color = guide_legend(reverse=T)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_SERIOUSTrend
rm(DF_Plot)

### Plot for Urgent WOs
#### Grab the pertinent data for plotting
LST_keep <- c("Year", "Urgent.CountDev", "Urgent.HoursDev", "Urgent.CostDev")
DF_Plot <- DF_Year[LST_keep]
#### Produce a transposed DF for use in plotting
DF_Plot <- gather(DF_Plot, Trend, Dev, Urgent.CountDev:Urgent.CostDev)
DF_Plot[DF_Plot == "Urgent.CountDev"] <- "Count"
DF_Plot[DF_Plot == "Urgent.HoursDev"] <- "Hours"
DF_Plot[DF_Plot == "Urgent.CostDev"] <- "Cost"
#### Plot on a line graph
PLOT_URGENTTrend <- ggplot(data=DF_Plot, aes(x=Year, y=Dev, color=Trend)) +
  geom_line(linewidth=1.5) +
  scale_color_manual(values=c('chartreuse4', 'firebrick4', 'darkblue')) +
  scale_y_continuous(expand = expansion(mult = c(.05, .05)), limits = c(0, 2)) +
  geom_hline(yintercept = 1, linetype = "dashed", color = "red", linewidth = 1) +
  annotate("text", x=max(DF_Year$Year), y=0.4, label=paste("Averages:","\n",format(round(VAR_avgFAILCount,0), nsmall=0, big.mark=",")," WOs\n",format(round(VAR_avgFAILHours,0), nsmall=0, big.mark=",")," Hrs\n","$",format(round(VAR_avgFAILCost,0), nsmall=0, big.mark=","), sep=""),hjust=0, vjust=1, size=4) +
  coord_cartesian(clip="off") +
  labs(title="Urgent Failure Work Order Trends") +
  xlab("Year") +
  ylab("Deviation From Average") +
  guides(color = guide_legend(reverse=T)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_URGENTTrend
rm(DF_Plot)


## Plot downtime trend
### Collect downtime of failure work orders by year
DF_Plot <- DF_WO[(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & (DF_WO$Impact!="NOFAIL") & (!is.na(DF_WO$DowntimeHours)) & (DF_WO$DowntimeHours>0),]
LST_keep <- c("Complete.Year", "DowntimeHours")
DF_Plot <- DF_Plot[LST_keep]
DF_Plot <- DF_Plot %>%
  group_by(Complete.Year) %>%
  summarise(sum = sum(DowntimeHours), avg = mean(DowntimeHours))
rm(LST_keep)
### Plot
PLOT_DTTrend <- ggplot(data=DF_Plot, aes(x=Complete.Year, y=sum)) +
  geom_line(color="firebrick4", linewidth=1.5) +
  scale_y_continuous(expand = expansion(mult = c(.0, .05)), limits = c(0, NA)) +
  labs(title="Total Annual Failure-Related Downtime Hours") +
  xlab("Year") +
  ylab("Hours") +
  guides(color = guide_legend(reverse=T)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_DTTrend
rm(DF_Plot)


## Corrective Work Order Count/Hours/Cost Rate (per equip) Distribution for WO Types

### Chart All WO count by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$WO.Count, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, WO.Count = (WO.Count/nrow(DF_Year)))
##### plot
PLOT_EQWOCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-WO.Count), y=WO.Count)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual WO Count by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Count / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQWOCount

### Chart All WO Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$WO.CountPerYr, decreasing=TRUE),]
#### plot
PLOT_CCWOCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-WO.CountPerYr), y=WO.CountPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual WO Count per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Count / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCWOCount

### Chart all WO hours by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$WO.Hours, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, WO.Hours = (WO.Hours/nrow(DF_Year)))
##### plot
PLOT_EQWOHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-WO.Hours), y=WO.Hours)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual WO Hours by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Hours / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQWOHours

### Chart all WO Hours per Year by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$WO.HoursPerYr, decreasing=TRUE),]
#### plot
PLOT_CCWOHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-WO.HoursPerYr), y=WO.HoursPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual WO Hours per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Hours / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCWOHours

### Chart all WO cost by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$WO.Cost, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, WO.Cost = (WO.Cost/nrow(DF_Year)))
##### plot
PLOT_EQWOCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-WO.Cost), y=WO.Cost)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual WO Cost by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Cost / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQWOCost

### Chart all WO Cost per Year by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$WO.CostPerYr, decreasing=TRUE),]
#### plot
PLOT_CCWOCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-WO.CostPerYr), y=WO.CostPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual WO Cost per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Cost / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCWOCost

### Chart COR count by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$COR.Count, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, COR.Count = (COR.Count/nrow(DF_Year)))
##### plot
PLOT_EQCORCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-COR.Count), y=COR.Count)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual COR Count by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Count / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQCORCount

### Chart COR Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$COR.CountPerYr, decreasing=TRUE),]
#### plot
PLOT_CCCORCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-COR.CountPerYr), y=COR.CountPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual COR Count per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Count / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCCORCount

### Chart COR hours by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$COR.Hours, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, COR.Hours = (COR.Hours/nrow(DF_Year)))
##### plot
PLOT_EQCORHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-COR.Hours), y=COR.Hours)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual COR Hours by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Hours / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQCORHours

### Chart COR Hours per Year by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$COR.HoursPerYr, decreasing=TRUE),]
#### plot
PLOT_CCCORHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-COR.CountPerYr), y=COR.CountPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual COR Hours per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Hours / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCCORHours

### Chart COR cost by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$COR.Cost, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, COR.Cost = (COR.Cost/nrow(DF_Year)))
##### plot
PLOT_EQCORCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-COR.Cost), y=COR.Cost)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual COR Cost by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Cost / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQCORCost

### Chart COR Cost per Year by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$COR.CostPerYr, decreasing=TRUE),]
#### plot
PLOT_CCCORCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-COR.CostPerYr), y=COR.CostPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual COR Cost per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Cost / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCCORCost

### Chart MOD count by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$MOD.Count, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, MOD.Count = (MOD.Count/nrow(DF_Year)))
##### plot
PLOT_EQMODCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-MOD.Count), y=MOD.Count)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual MOD Count by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Count / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQMODCount

### Chart MOD Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$MOD.CountPerYr, decreasing=TRUE),]
#### plot
PLOT_CCMODCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-MOD.CountPerYr), y=MOD.CountPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual MOD Count per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Count / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCMODCount

### Chart MOD hours by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$MOD.Hours, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, MOD.Hours = (MOD.Hours/nrow(DF_Year)))
##### plot
PLOT_EQMODHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-MOD.Hours), y=MOD.Hours)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual MOD Hours by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Hours / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQMODHours

### Chart MOD Hours per Year by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$MOD.HoursPerYr, decreasing=TRUE),]
#### plot
PLOT_CCMODHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-MOD.CountPerYr), y=MOD.CountPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual MOD Hours per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Hours / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCMODHours

### Chart MOD cost by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$MOD.Cost, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, MOD.Cost = (MOD.Cost/nrow(DF_Year)))
##### plot
PLOT_EQMODCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-MOD.Cost), y=MOD.Cost)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual MOD Cost by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Cost / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQMODCost

### Chart MOD Cost per Year by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$MOD.CostPerYr, decreasing=TRUE),]
#### plot
PLOT_CCMODCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-MOD.CostPerYr), y=MOD.CostPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual MOD Cost per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Cost / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCMODCost

### Chart PM count by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$PM.Count, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, PM.Count = (PM.Count/nrow(DF_Year)))
##### plot
PLOT_EQPMCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-PM.Count), y=PM.Count)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual PM Count by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Count / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQPMCount

### Chart PM Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$PM.CountPerYr, decreasing=TRUE),]
#### plot
PLOT_CCPMCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-PM.CountPerYr), y=PM.CountPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual PM Count per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Count / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCPMCount

### Chart PM Hours by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$PM.Hours, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, PM.Hours = (PM.Hours/nrow(DF_Year)))
##### plot
PLOT_EQPMHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-PM.Hours), y=PM.Hours)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual PM Hours by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Hours / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQPMHours

### Chart PM Hours Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$PM.HoursPerYr, decreasing=TRUE),]
#### plot
PLOT_CCPMHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-PM.HoursPerYr), y=PM.HoursPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual PM Hours per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Hours / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCPMHours

### Chart PM Cost by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$PM.Cost, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, PM.Cost = (PM.Cost/nrow(DF_Year)))
##### plot
PLOT_EQPMCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-PM.Cost), y=PM.Cost)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual PM Cost by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Cost / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQPMCost

### Chart PM Cost Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$PM.CostPerYr, decreasing=TRUE),]
#### plot
PLOT_CCPMCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-PM.CostPerYr), y=PM.CostPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual PM Cost per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Cost / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCPMCost

### Chart CAL count by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$CAL.Count, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, CAL.Count = (CAL.Count/nrow(DF_Year)))
##### plot
PLOT_EQCALCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-CAL.Count), y=CAL.Count)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual CAL Count by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Count / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQCALCount

### Chart CAL Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$CAL.CountPerYr, decreasing=TRUE),]
#### plot
PLOT_CCCALCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-CAL.CountPerYr), y=CAL.CountPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual CAL Count per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Count / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCCALCount

### Chart CAL Hours by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$CAL.Hours, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, CAL.Hours = (CAL.Hours/nrow(DF_Year)))
##### plot
PLOT_EQCALHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-CAL.Hours), y=CAL.Hours)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual CAL Hours by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Hours / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQCALHours

### Chart CAL Hours Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$CAL.HoursPerYr, decreasing=TRUE),]
#### plot
PLOT_CCCALHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-CAL.HoursPerYr), y=CAL.HoursPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual CAL Hours per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Hours / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCCALHours

### Chart CAL Cost by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$CAL.Cost, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, CAL.Cost = (CAL.Cost/nrow(DF_Year)))
##### plot
PLOT_EQCALCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-CAL.Cost), y=CAL.Cost)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual CAL Cost by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Cost / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQCALCost

### Chart CAL Cost Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$CAL.CostPerYr, decreasing=TRUE),]
#### plot
PLOT_CCCALCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-CAL.CostPerYr), y=CAL.CostPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual CAL Cost per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Cost / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCCALCost

### Chart FAIL count by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$FAIL.Count, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, FAIL.Count = (FAIL.Count/nrow(DF_Year)))
##### plot
PLOT_EQFAILCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-FAIL.Count), y=FAIL.Count)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Failure Count by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Count / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
#### Grab the top 3 EAMS IDs before removing the temporary DF
LST_TOP3Equip_FAIL = head(DF_Plot$Object,3)
rm(DF_Plot)
PLOT_EQFAILCount

### Chart FAIL Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$FAIL.CountPerYr, decreasing=TRUE),]
#### plot
PLOT_CCFAILCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-FAIL.CountPerYr), y=FAIL.CountPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Failure Count per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Count / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
#### Grab the top 3 classcats before removing the temporary DF
LST_TOP3ClassCat_FAIL = head(DF_Plot$ClassCategory,3)
rm(DF_Plot)
PLOT_CCFAILCount

### Chart FAIL Hours by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$FAIL.Hours, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, FAIL.Hours = (FAIL.Hours/nrow(DF_Year)))
##### plot
PLOT_EQFAILHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-FAIL.Hours), y=FAIL.Hours)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Failure Hours by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Hours / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQFAILHours

### Chart FAIL Hours Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$FAIL.HoursPerYr, decreasing=TRUE),]
#### plot
PLOT_CCFAILHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-FAIL.HoursPerYr), y=FAIL.HoursPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Failure Hours per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Hours / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCFAILHours

### Chart FAIL Cost by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$FAIL.Cost, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, FAIL.Cost = (FAIL.Cost/nrow(DF_Year)))
##### plot
PLOT_EQFAILCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-FAIL.Cost), y=FAIL.Cost)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual Failure Cost by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Cost / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQFAILCost

### Chart FAIL Cost Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$FAIL.CostPerYr, decreasing=TRUE),]
#### plot
PLOT_CCFAILCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-FAIL.CostPerYr), y=FAIL.CostPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual Failure Cost per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Cost / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCFAILCost

### Chart Urgent COR count by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$Urgent.Count, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, Urgent.Count = (Urgent.Count/nrow(DF_Year)))
##### plot
PLOT_EQUrgentCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-Urgent.Count), y=Urgent.Count)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Urgent Failure Count by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Count / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQUrgentCount

### Chart Urgent COR Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$Urgent.CountPerYr, decreasing=TRUE),]
#### plot
PLOT_CCUrgentCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-Urgent.CountPerYr), y=Urgent.CountPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Urgent Failure Count per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Count / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCUrgentCount

### Chart Urgent Hours by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$FAIL.Hours, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, Urgent.Hours = (Urgent.Hours/nrow(DF_Year)))
##### plot
PLOT_EQUrgentHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-Urgent.Hours), y=Urgent.Hours)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Urgent Failuure Hours by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Hours / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQUrgentHours

### Chart Urgent Hours Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$Urgent.HoursPerYr, decreasing=TRUE),]
#### plot
PLOT_CCUrgentHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-Urgent.HoursPerYr), y=Urgent.HoursPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Urgent Failure Hours per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Hours / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCUrgentHours

### Chart Urgent Cost by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$Urgent.Cost, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, Urgent.Cost = (Urgent.Cost/nrow(DF_Year)))
##### plot
PLOT_EQUrgentCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-Urgent.Cost), y=Urgent.Cost)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual Urgent Failure Cost by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Cost / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQUrgentCost

### Chart Urgent Cost Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$Urgent.CostPerYr, decreasing=TRUE),]
#### plot
PLOT_CCUrgentCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-Urgent.CostPerYr), y=Urgent.CostPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual Urgent Failure Cost per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Cost / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCUrgentCost

### Chart Serious COR count by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$Serious.Count, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, Serious.Count = (Serious.Count/nrow(DF_Year)))
##### plot
PLOT_EQSeriousCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-Serious.Count), y=Serious.Count)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Serious WO Count by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Count / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQSeriousCount

### Chart Serious COR Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$Serious.CountPerYr, decreasing=TRUE),]
#### plot
PLOT_CCSeriousCount <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-Serious.CountPerYr), y=Serious.CountPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Serious WO Count by Class-Category") +
  xlab("Class-Category") +
  ylab("Count / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCSeriousCount

### Chart Serious Hours by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$FAIL.Hours, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, Serious.Hours = (Serious.Hours/nrow(DF_Year)))
##### plot
PLOT_EQSeriousHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-Serious.Hours), y=Serious.Hours)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Serious Failuure Hours by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Hours / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQSeriousHours

### Chart Serious Hours Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$Serious.HoursPerYr, decreasing=TRUE),]
#### plot
PLOT_CCSeriousHours <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-Serious.HoursPerYr), y=Serious.HoursPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Serious Failure Hours per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Hours / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCSeriousHours

### Chart Serious Cost by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$Serious.Cost, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, Serious.Cost = (Serious.Cost/nrow(DF_Year)))
##### plot
PLOT_EQSeriousCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-Serious.Cost), y=Serious.Cost)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual Serious Failure Cost by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Cost / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQSeriousCost

### Chart Serious Cost Rate by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$Serious.CostPerYr, decreasing=TRUE),]
#### plot
PLOT_CCSeriousCost <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-Serious.CostPerYr), y=Serious.CostPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA), labels=scales::dollar_format()) +
  labs(title="Average Annual Serious Failure Cost per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Cost / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCSeriousCost


## COR WO Priority Distribution

### Chart EAMS ID counts by ClassCat
#### Make a new DF with Class-Category as the anchor
DF_Priority <- unique(DF_WO[c("Priority")])
#### Add a specifier
DF_Priority$Range <- "All"
#### Populate with count of EAMS IDs per Class-Category
##### Collect the counts in a temp dataframe
DF_temp <- DF_WO[DF_WO$WO.Type=="COR", ] %>%
  count(Priority) %>%
  right_join(DF_Priority) %>%
  replace_na(list(n=0))
##### transfer the counts to the ClassCat DF
DF_Priority$COR.Count <- DF_temp$n[match(DF_Priority$Priority, DF_temp$Priority)]
rm(DF_temp)
##### add percentages
DF_Priority$COR.Perc <- DF_Priority$COR.Count/sum(DF_Priority$COR.Count)
##### add annual count
DF_Priority$COR.Count.Annual <- round(DF_Priority$COR.Count/nrow(DF_Year),0)
#### Make a temp DF with the same priority counts for just the most recent year
DF_temp <- DF_WO[DF_WO$WO.Type=="COR" & DF_WO$Complete.Year == LST_Years[length(LST_Years)], ] %>%
  count(Priority) %>%
  right_join(DF_Priority) %>%
  replace_na(list(n=0))
##### Clean up DF_temp to align with DF_Priority for rbind
DF_temp <- DF_temp[,-4]
DF_temp <- DF_temp %>% relocate(n, .after=Range)
DF_temp$Range <- as.integer(LST_Years[length(LST_Years)])
colnames(DF_temp)[colnames(DF_temp)=="n"] <- "COR.Count"
##### add percentages
DF_temp$COR.Perc <- DF_temp$COR.Count/sum(DF_temp$COR.Count)
##### add annual count
DF_temp$COR.Count.Annual <- DF_temp$COR.Count
##### bring priority and temp together
DF_Plot <- rbind(DF_Priority, DF_temp)
rm(DF_temp)

### Plot the priorites
PLOT_EQPriority <- ggplot(data=DF_Plot, aes(x=Priority, y=(COR.Count.Annual), fill=forcats::fct_rev(Range))) +
  geom_bar(stat="identity", position="dodge") +
  scale_fill_manual(name="Year Range", values=c('darkblue', 'chartreuse4')) +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  geom_text(aes(label=scales::percent(COR.Perc, accuracy = 1)), position=position_dodge(width=.9), vjust=1.5, color='white') +
  labs(title="Average Annual Count of COR WO by Priority") +
  xlab("Priority") +
  ylab("Count") +
  guides(fill = guide_legend(reverse=T)) +
  theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_EQPriority

## Time to completion

### Put a span on the WO DF of days between completion and report (for COR) or completion and due date (for PM)
#### Note that for PM, a negative span would be appropriate (geting it done before due)
DF_WO <- transform(DF_WO, WO.Span = ifelse(DF_WO$WO.Type=="PM" | DF_WO$WO.Type=="CAL",(DF_WO$Complete.Date - DF_WO$Original.Due.Date),(DF_WO$Complete.Date - DF_WO$Reported.Date)))
DF_WO$WO.Span <- as.numeric(DF_WO$WO.Span)
#### Put an average span down for each priority 
DF_temp <- DF_WO[DF_WO$WO.Type=="COR", ] %>%
  group_by(Priority) %>%
  summarise(n = n(), sum = sum(WO.Span))
#### Determine average
DF_temp <- transform(DF_temp, avg = (sum/n)) 
#### Move the average to the Priority DF
DF_Priority$Avg.Span <- DF_temp$avg[match(DF_Priority$Priority, DF_temp$Priority)]
#### Round to whole number
DF_Priority$Avg.Span <- round(DF_Priority$Avg.Span, 1)
rm(DF_temp)
#### plot
PLOT_PriSpan <- ggplot(data=head(DF_Priority), aes(x=Priority, y=Avg.Span)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  geom_text(aes(label=Avg.Span), position=position_dodge(width=.9), vjust=-.5, color='black') +
  labs(title="Average COR Days to Complete by Priority") +
  xlab("Priority") +
  ylab("Days") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_PriSpan

### Collect span by reliability rank
DF_temp <- DF_WO[DF_WO$WO.Type=="COR", ] %>%
  group_by(Reliability.Ranking) %>%
  summarise(avg=round(mean(WO.Span),0))
DF_ReliRank$Span.Avg <- DF_temp$avg[match(DF_ReliRank$Reliability.Ranking, DF_temp$Reliability.Ranking)]
#### Subset for Urgent
DF_temp <- DF_WO[DF_WO$WO.Type=="COR" & DF_WO$Priority<=2, ] %>%
  group_by(Reliability.Ranking) %>%
  summarise(avg=round(mean(WO.Span),0))
DF_ReliRank$Span.Urgent <- DF_temp$avg[match(DF_ReliRank$Reliability.Ranking, DF_temp$Reliability.Ranking)]
#### Subset for Routine
DF_temp <- DF_WO[DF_WO$WO.Type=="COR" & DF_WO$Priority>2, ] %>%
  group_by(Reliability.Ranking) %>%
  summarise(avg=round(mean(WO.Span),0))
DF_ReliRank$Span.Routine <- DF_temp$avg[match(DF_ReliRank$Reliability.Ranking, DF_temp$Reliability.Ranking)]
#### Subset for PM
DF_temp <- DF_WO[DF_WO$WO.Type=="PM", ] %>%
  group_by(Reliability.Ranking) %>%
  summarise(avg=round(mean(WO.Span),0))
DF_ReliRank$Span.PM <- DF_temp$avg[match(DF_ReliRank$Reliability.Ranking, DF_temp$Reliability.Ranking)]

### Plot span vs RRank for Urgent COR
PLOT_UrgentSpanRank <- ggplot(data=head(DF_ReliRank), aes(x=reorder(Reliability.Ranking,-Value), y=Span.Urgent)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(.05, .05)), limits = c(NA, NA)) +
  geom_text(aes(label=ifelse(Span.Urgent==0,'',Span.Urgent)), position=position_dodge(width=.9), vjust=ifelse(DF_ReliRank$Span.Urgent<0,-0.5,1.5), color='white') +
  labs(title="Average Days to Complete Urgent COR WO by Reliability Rank") +
  xlab("Reliability Rank") +
  ylab("Days") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_UrgentSpanRank

### Plot span vs RRank for Routine COR
PLOT_RoutineSpanRank <- ggplot(data=head(DF_ReliRank), aes(x=reorder(Reliability.Ranking,-Value), y=Span.Routine)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(.05, .05)), limits = c(NA, NA)) +
  geom_text(aes(label=ifelse(Span.Routine==0,'',Span.Routine)), position=position_dodge(width=.9), vjust=ifelse(DF_ReliRank$Span.Routine<0,-0.5,1.5), color='white') +
  labs(title="Average Days to Complete Routine COR WO by Reliability Rank") +
  xlab("Reliability Rank") +
  ylab("Days") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_RoutineSpanRank

### Plot span vs RRank for PM 
PLOT_PMSpanRank <- ggplot(data=head(DF_ReliRank), aes(x=reorder(Reliability.Ranking,-Value), y=Span.PM)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(.05, .05)), limits = c(NA, NA)) +
  geom_text(aes(label=ifelse(Span.PM==0,'',Span.PM)), position=position_dodge(width=.9), vjust=ifelse(DF_ReliRank$Span.PM<0,-0.5,1.5), color='white') +
  labs(title="Average Days Overdue PM WO by Reliability Rank") +
  xlab("Reliability Rank") +
  ylab("Days") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
PLOT_PMSpanRank

### Chart Downtime hours by EAMS ID
DF_Plot = DF_Equip[order(DF_Equip$DT.Sum, decreasing=TRUE),]
DF_Plot <- transform(DF_Plot, DT.Sum = (DT.Sum/nrow(DF_Year)))
##### plot
PLOT_EQDowntime<- ggplot(data=head(DF_Plot,20), aes(x=reorder(Object,-DT.Sum), y=DT.Sum)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Failure Downtime Hours by EAMS ID") +
  xlab("EAMS ID") +
  ylab("Hours / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_EQDowntime

### Chart Downtime hours by classCat
DF_Plot = DF_ClassCat[order(DF_ClassCat$WO.DTPerYr, decreasing=TRUE),]
#### plot
PLOT_CCDowntime <- ggplot(data=head(DF_Plot,20), aes(x=reorder(ClassCategory,-WO.DTPerYr), y=WO.DTPerYr)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Average Annual Failure Downtime Hours per Equip by Class-Category") +
  xlab("Class-Category") +
  ylab("Hours / Machine / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_CCDowntime


## Failure Coding

### Failure Mode Code distribution on Failure work orders
#### Temp DF to hold Failure Mode data
DF_Plot <- DF_WO[(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & (DF_WO$Impact!="NOFAIL") & !is.na(DF_WO$Failure.Mode),] %>%
  group_by(Failure.Mode) %>%
  summarise(n = n())
DF_Plot <- transform(DF_Plot, CodePerYear = round(n/nrow(DF_Year),0))
#### Plot Failure Mode
PLOT_FailMode<- ggplot(data=head(DF_Plot,20), aes(x=reorder(Failure.Mode,-n), y=CodePerYear)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Top Failure Mode Codes on COR WOs") +
  xlab("Failure Mode") +
  ylab("Count / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_FailMode

### Cause Code distribution on Failure work orders
#### Temp DF to hold Cause data
DF_Plot <- DF_WO[(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & (DF_WO$Impact!="NOFAIL") & !is.na(DF_WO$Cause.Code),] %>%
  group_by(Cause.Code) %>%
  summarise(n = n())
DF_Plot <- transform(DF_Plot, CodePerYear = round(n/nrow(DF_Year),0))
#### Plot Cause Code
PLOT_CauseCode<- ggplot(data=head(DF_Plot,20), aes(x=reorder(Cause.Code,-n), y=CodePerYear)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Top Cause Codes on COR WOs") +
  xlab("Cause Code") +
  ylab("Count / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_CauseCode

### Action Code distribution on Failure work orders
#### Temp DF to hold Action data
DF_Plot <- DF_WO[(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & (DF_WO$Impact!="NOFAIL") & !is.na(DF_WO$Action.Code),] %>%
  group_by(Action.Code) %>%
  summarise(n = n())
DF_Plot <- transform(DF_Plot, CodePerYear = round(n/nrow(DF_Year),0))
#### Plot Action Code
PLOT_ActionCode<- ggplot(data=head(DF_Plot,20), aes(x=reorder(Action.Code,-n), y=CodePerYear)) +
  geom_bar(stat="identity", fill="chartreuse4") +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Top Action Codes on COR WOs") +
  xlab("Action Code") +
  ylab("Count / Year") +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold"))
rm(DF_Plot)
PLOT_ActionCode


## WO Type Distributions

### Pie chart of WO Type distribution
#### Table the WO Type distribution
DF_Plot <- DF_WO[!is.na(DF_WO$WO.Type),] %>%
  group_by(WO.Type) %>%
  summarise(n = n())
##### Add a column for percent label
DF_Plot <- transform(DF_Plot, percent = paste0(round((n/sum(n))*100, 1), "%"))
#### Make a pie chart
DF_Plot <- DF_Plot %>% arrange(desc(WO.Type)) %>% mutate(prop = n / sum(DF_Plot$n)*100) %>% mutate(ypos=cumsum(prop)-0.5*prop)
PLOT_TypePie <- ggplot(data=DF_Plot, aes(x="", y=prop, fill=WO.Type)) +
  geom_bar(stat="identity", width=5, color="black") +
  coord_polar("y", start=0) +
  geom_text(aes(y=ypos, label=percent), color="cornsilk", size=6) +
  scale_fill_brewer(palette="Spectral", direction =-1) +
  scale_fill_hue(l=40, c=35) +
  labs(title="EAMS WO Type Distribution") +
  theme(axis.text=element_blank(), axis.ticks=element_blank(),panel.grid=element_blank(), axis.title=element_blank()) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold"))
rm(DF_Plot)
PLOT_TypePie

### Chart of GRP-designated work types
##### Create a concatenation of Type and SubType
DF_WO <- transform(DF_WO, TypeSubtype = paste(DF_WO$WO.Type,"/",DF_WO$WO.Sub.type))
##### Summarize into a temp DF by the new concatenaction
DF_temp <- DF_WO[!is.na(DF_WO$TypeSubtype),] %>%
  group_by(TypeSubtype, Priority) %>%
  summarise(n = n())
##### Convert the Type & Sub-Type to a Type Category that aligns with GRP designations
VEC_WOTypeCats <- c("CAL / BLANK" = "PMI", 
                    "CAL / CAL" = "PMI",
                    "CAL / CALGMP" = "PMI",
                    "CAL / EQRPR" = "PMI",
                    "CAL / VAL" = "OTHER",
                    "COR / BLANK" = "REP",
                    "COR / CAL" = "PMR",
                    "COR / CALGMP" = "PMR",
                    "COR / CBM" = "PDR",
                    "COR / EHS" = "REP",
                    "COR / EQRPR" = "REP",
                    "COR / FAIL" = "REP",
                    "COR / IMPV" = "REP",
                    "COR / OPCARE" = "PMR",
                    "COR / PM" = "PMR",
                    "COR / SUPRT" = "OTHER",
                    "MOD / BLANK" = "REP",
                    "MOD / COMM" = "REP",
                    "MOD / EHS" = "REP",
                    "MOD / EQRPR" = "REP",
                    "MOD / FMEA" = "REP",
                    "MOD / IMPV" = "REP",
                    "MOD / RCFA" = "REP",
                    "PM / BLANK" = "PMI",
                    "PM / CAL" = "PMI",
                    "PM / LUBE" = "PMI",
                    "PM / PM" = "PMI",
                    "PM / PMGMP" = "PMI")
DF_temp$TypeCat <- VEC_WOTypeCats[DF_temp$TypeSubtype]
##### Use Priority to differentiate between REP and REM
DF_temp$TypeCat[DF_temp$TypeCat=="REP" & DF_temp$Priority<=2] <- "REM"
##### Get rid of N/A and Other
DF_temp$TypeCat[is.na(DF_temp$TypeCat)] <- "OTHER"
DF_temp <- DF_temp[(!DF_temp$TypeCat=="OTHER"),]
##### Re-summarize based on the new TypeCat
DF_temp <- DF_temp %>%
  group_by(TypeCat) %>%
  summarise(n = sum(n))
##### Add a column for percent label
DF_temp <- transform(DF_temp, percent = paste0(round((n/sum(n))*100, 1), "%"))
#### Make a pie chart
DF_Plot <- DF_temp %>% arrange(desc(TypeCat)) %>% mutate(prop = n / sum(DF_temp$n)*100) %>% mutate(ypos=cumsum(prop)-0.5*prop)
PLOT_TypeCatPie <- ggplot(data=DF_Plot, aes(x="", y=prop, fill=TypeCat)) +
  geom_bar(stat="identity", width=5, color="black") +
  coord_polar("y", start=0) +
  geom_text(aes(y=ypos, label=percent), color="cornsilk", size=6) +
  scale_fill_brewer(palette="Spectral", direction=-1) +
  scale_fill_hue(l=40, c=35) +
  labs(title="GRP WO Type Distribution") +
  theme(axis.text=element_blank(), axis.ticks=element_blank(),panel.grid=element_blank(), axis.title=element_blank()) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold"))
rm(DF_Plot, DF_temp)
PLOT_TypeCatPie


## Trend Top3 groups for failures

### Trend COR Rate by EAMS ID by Year for top 3 IDs
DF_Plot <- DF_EqYearType[DF_EqYearType$Object.Code %in% LST_TOP3Equip_FAIL,]
DF_Plot <- DF_Plot[(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & (DF_WO$Impact!="NOFAIL"),]
DF_Plot <- DF_Plot %>%
  group_by(Object.Code, Complete.Year) %>%
  summarise(sum = sum(WO.Count.Annual))
DF_Plot <- subset(DF_Plot, !is.na(DF_Plot$Object.Code))
### Plot on a line graph
PLOT_TOP3Equip_FAIL <- ggplot(data=DF_Plot, aes(x=Complete.Year, y=sum, color=Object.Code)) +
  geom_line(linewidth=1.5) +
  scale_color_manual(values=c('chartreuse4', 'firebrick4', 'darkblue')) +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Corrective WO Count by Year for Top 3 EAMS IDs") +
  xlab("Year") +
  ylab("Count") +
  guides(color = guide_legend(reverse=T)) +
  theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_TOP3Equip_FAIL

### Trend COR Rate by classCat by Year for top 3 classCats
DF_Plot <- DF_CCYearType[DF_CCYearType$ClassCategory %in% LST_TOP3ClassCat_FAIL,]
DF_Plot <- DF_Plot[(DF_WO$WO.Type=="COR" | DF_WO$WO.Type=="MOD") & (DF_WO$Impact!="NOFAIL"),]
DF_Plot <- DF_Plot %>%
  group_by(ClassCategory, Complete.Year) %>%
  summarise(avg = mean(WO.Count.Rate))
DF_Plot <- subset(DF_Plot, !is.na(DF_Plot$ClassCategory))
### Plot on a line graph
PLOT_TOP3ClassCat_FAIL <- ggplot(data=DF_Plot, aes(x=Complete.Year, y=avg, color=ClassCategory)) +
  geom_line(linewidth=1.5) +
  scale_color_manual(values=c('chartreuse4', 'firebrick4', 'darkblue')) +
  scale_y_continuous(expand = expansion(mult = c(0, .05)), limits = c(0, NA)) +
  labs(title="Corrective WO Count per Equip by Year for Top 3 Class-Categories") +
  xlab("Year") +
  ylab("Count") +
  guides(color = guide_legend(reverse=T))
theme(axis.text.x = element_text(angle=45, vjust=1, hjust=1)) +
  theme(plot.title = element_text(color="darkslategray", size=14, face="bold")) +
  theme(axis.title.x = element_text(color="darkslategray", size=12, face="bold")) +
  theme(axis.title.y = element_text(color="darkslategray", size=12, face="bold")) 
rm(DF_Plot)
PLOT_TOP3ClassCat_FAIL


## Prepare consolidated dataframes

### Build a consolidated WO DF
DF_WOCon <- DF_WO
DF_WOCon$TypeSubtype <- NULL
#### Re-order & Re-name existing columns
LST_colOrder <- c("WO..", "Description.wo", "WO.Type", "WO.Sub.type", "Scheduling.Group", "Priority", "Reported.Date", "Created.Date", "Original.Due.Date", "Complete.Date", "Complete.Year", "WO.Span", "Task", "Hours.Worked", "Total.Cost", "Failure.Mode", "Cause.Code", "Action.Code", "Impact", "DowntimeHours", "Object.Code", "Description.equip", "Class", "Category", "ClassCategory", "Manufacturer", "Model", "Reliability.Ranking", "Commission.Date")
LST_newNames <- c("WO", "Description", "Type", "Sub-Type", "SchdGroup", "Priority", "ReportedDate", "CreatedDate", "PMDueDate", "CompleteDate", "CompleteYear", "Span", "Task", "Hours", "Cost", "FailureMode", "CauseCode", "ActionCode", "Impact", "Downtime", "EAMSID", "EquipDescription", "Class", "Category", "ClassCat", "Manufacturer", "Model", "RRank", "CommissionDate")
DF_WOCon <- DF_WOCon[, LST_colOrder]
colnames(DF_WOCon) <- c(LST_newNames)
### Add skill codes from all activities in one concatenated field
#### Create a temp table with WO# and concatenated skill codes
DF_temp <- DF_Activity %>%
  select(WO.., Skill.Code) %>%
  group_by(WO..) %>%
  mutate(Craft = paste0(Skill.Code, collapse=", ")) %>%
  distinct(WO.., Craft, .keep_all = TRUE)
#### Transfer to consolidated WO DF
DF_WOCon$Crafts <- DF_temp$Craft[match(DF_WOCon$WO, DF_temp$WO..)]
rm(DF_temp)
### Add wo comments as one concatenated field
DF_temp <- DF_Comment %>%
  select(WO.Number, Comment) %>%
  group_by(WO.Number) %>%
  mutate(Text = paste0(Comment, collapse=";    ")) %>%
  distinct(WO.Number, Text, .keep_all = TRUE)
#### Transfer to consolidated WO DF
DF_WOCon$Comments <- DF_temp$Text[match(DF_WOCon$WO, DF_temp$WO.Number)]
rm(DF_temp)

### Make a subset of the consolidated WOs just for failures
DF_WOCon_FAIL <- DF_WOCon[(DF_WOCon$Type=="COR" | DF_WOCon$Type=="MOD") & (DF_WOCon$Impact!="NOFAIL"),]

### Build a consolidated Equip DF
DF_EQCon <- DF_Equip
DF_EQCon$RRankScore <- NULL
#### Re-order & Re-name existing columns
LST_colOrder <- c("Object", "Description.Equip", "Class", "Category", "ClassCategory", "Manufacturer", "Model", "Reliability.Ranking", "Commission.Date", "Age", "PID", "var2", "var4", "Parent", "WO.Count", "WO.Hours", "WO.Cost", "COR.Count", "COR.Hours", "COR.Cost", "MOD.Count", "MOD.Hours", "MOD.Cost", "PM.Count", "PM.Hours", "PM.Cost", "CAL.Count", "CAL.Hours", "CAL.Cost", "FAIL.Count", "FAIL.Hours", "FAIL.Cost", "Urgent.Count", "Urgent.Hours", "Urgent.Cost", "Serious.Count", "Serious.Hours", "Serious.Cost", "DT.Sum")
LST_newNames <- c("EAMSID", "Description", "Class", "Category", "ClassCategory", "Manufacturer", "Model", "RRank", "CommissionDate", "Age", "PID", "Var2", "Var4", "ParentID", "WO_Count", "WO_Hours", "WO_Cost", "COR_Count", "COR_Hours", "COR_Cost", "MOD_Count", "MOD_Hours", "MOD_Cost", "PM_Count", "PM_Hours", "PM_Cost", "CAL_Count", "CAL_Hours", "CAL_Cost", "Failure_Count", "Failure_Hours", "Failure_Cost", "Urgent_Count", "Urgent_Hours", "Urgent_Cost", "Serious_Count", "Serious_Hours", "Serious_Cost", "DowntimeTotal")
DF_EQCon <- DF_EQCon[, LST_colOrder]
colnames(DF_EQCon) <- c(LST_newNames)
### Add associated items as one concatenated field
DF_temp <- DF_Item
DF_temp <- transform(DF_temp, ItemInfo = paste0(DF_temp$Item.No., ": ", DF_temp$Description, " (Qty - ", DF_temp$Quantity, ")"))
DF_temp <- DF_temp %>%
  select(Object, ItemInfo) %>%
  group_by(Object) %>%
  mutate(Text = paste0(ItemInfo, collapse="; ")) %>%
  distinct(Object, Text, .keep_all = TRUE)
#### Transfer to consolidated WO DF
DF_EQCon$AssociatedItems <- DF_temp$Text[match(DF_EQCon$EAMSID, DF_temp$Object)]
rm(DF_temp)

### Build a consolidated ClassCat DF
DF_CCCon <- DF_ClassCat[1:55]
LST_ColOrder <- c("ClassCategory", "Class", "Category", "Count", "AvgAge", "AvgRRank", "WO.Count", "WO.Hours", "WO.Cost", "COR.Count", "COR.Hours", "COR.Cost", "MOD.Count", "MOD.Hours", "MOD.Cost", "PM.Count", "PM.Hours", "PM.Cost", "CAL.Count", "CAL.Hours", "CAL.Cost", "FAIL.Count", "FAIL.Hours", "FAIL.Cost", "Urgent.Count", "Urgent.Hours", "Urgent.Cost", "Serious.Count", "Serious.Hours", "Serious.Cost", "WO.DT")
LST_newNames <- c("ClassCategory", "Class", "Category", "Count", "AvgAge", "AvgRRank", "WO_Count", "WO_Hours", "WO_Cost", "COR_Count", "COR_Hours", "COR_Cost", "MOD_Count", "MOD_Hours", "MOD_Cost", "PM_Count", "PM_Hours", "PM_Cost", "CAL_Count", "CAL_Hours", "CAL_Cost", "FAIL_Count", "FAIL_Hours", "FAIL_Cost", "Urgent_Count", "Urgent_Hours", "Urgent_Cost", "Serious_Count", "Serious_Hours", "Serious_Cost", "DowntimeTotal")
DF_CCCon <- DF_CCCon[, LST_ColOrder]
colnames(DF_CCCon) <- c(LST_newNames)


## Export data and plots to Excel

if (FLAG_save) {
  wb <- createWorkbook()
  
  addWorksheet(wb, "DATA_EQUIP")
  writeData(wb, sheet="DATA_EQUIP", x=DF_EQCon, startRow = 1, startCol = 1, colNames = TRUE)
  freezePane(wb, "DATA_EQUIP", firstActiveRow = 2, firstActiveCol = 2)
  
  addWorksheet(wb, "DATA_CLASSCAT")
  writeData(wb, sheet="DATA_CLASSCAT", x=DF_CCCon, startRow = 1, startCol = 1, colNames = TRUE)
  freezePane(wb, "DATA_CLASSCAT", firstActiveRow = 2, firstActiveCol = 2)
  
  addWorksheet(wb, "DATA_WO")
  writeData(wb, sheet="DATA_WO", x=DF_WOCon, startRow = 1, startCol = 1, colNames = TRUE)
  freezePane(wb, "DATA_WO", firstActiveRow = 2, firstActiveCol = 2)
  addWorksheet(wb, "DATA_WO_FAIL")
  
  writeData(wb, sheet="DATA_WO_FAIL", x=DF_WOCon_FAIL, startRow = 1, startCol = 1, colNames = TRUE)
  freezePane(wb, "DATA_EQUIP", firstActiveRow = 2, firstActiveCol = 2)
  
  addWorksheet(wb, "PLOT_EQUIP")
  print(PLOT_EQComp)
  insertPlot(wb, "PLOT_EQUIP", startRow=5, startCol = 2)
  print(PLOT_IDCount)
  insertPlot(wb, "PLOT_EQUIP", startRow=25, startCol = 2)
  print(PLOT_RRCount)
  insertPlot(wb, "PLOT_EQUIP", startRow=25, startCol = 10)
  print(PLOT_RRankAvg)
  insertPlot(wb, "PLOT_EQUIP", startRow=45, startCol = 2)
  print(PLOT_AgeAvg)
  insertPlot(wb, "PLOT_EQUIP", startRow=45, startCol = 10)
  
  addWorksheet(wb, "PLOT_WO")
  print(PLOT_WOComp)
  insertPlot(wb, "PLOT_WO", startRow=5, startCol = 2)
  print(PLOT_TypePie)
  insertPlot(wb, "PLOT_WO", startRow=25, startCol = 2)
  print(PLOT_TypeCatPie)
  insertPlot(wb, "PLOT_WO", startRow=25, startCol = 10)
  print(PLOT_EQPriority)
  insertPlot(wb, "PLOT_WO", startRow=45, startCol = 2)
  print(PLOT_PriSpan)
  insertPlot(wb, "PLOT_WO", startRow=45, startCol = 10)
  print(PLOT_RoutineSpanRank)
  insertPlot(wb, "PLOT_WO", startRow=65, startCol = 2)
  print(PLOT_UrgentSpanRank)
  insertPlot(wb, "PLOT_WO", startRow=65, startCol = 10)
  print(PLOT_PMSpanRank)
  insertPlot(wb, "PLOT_WO", startRow=65, startCol = 18)
  print(PLOT_WOTrend)
  insertPlot(wb, "PLOT_WO", startRow=85, startCol = 2)
  print(PLOT_EQWOCount)
  insertPlot(wb, "PLOT_WO", startRow=105, startCol = 2)
  print(PLOT_EQWOHours)
  insertPlot(wb, "PLOT_WO", startRow=105, startCol = 10)
  print(PLOT_EQWOCost)
  insertPlot(wb, "PLOT_WO", startRow=105, startCol = 18)
  print(PLOT_CCWOCount)
  insertPlot(wb, "PLOT_WO", startRow=125, startCol = 2)
  print(PLOT_CCWOHours)
  insertPlot(wb, "PLOT_WO", startRow=125, startCol = 10)
  print(PLOT_CCWOCost)
  insertPlot(wb, "PLOT_WO", startRow=125, startCol = 18)
  
  addWorksheet(wb, "PLOT_COR")
  print(PLOT_CORTrend)
  insertPlot(wb, "PLOT_COR", startRow=5, startCol = 2)
  print(PLOT_EQCORCount)
  insertPlot(wb, "PLOT_COR", startRow=25, startCol = 2)
  print(PLOT_EQCORHours)
  insertPlot(wb, "PLOT_COR", startRow=25, startCol = 10)
  print(PLOT_EQCORCost)
  insertPlot(wb, "PLOT_COR", startRow=25, startCol = 18)
  print(PLOT_CCCORCount)
  insertPlot(wb, "PLOT_COR", startRow=45, startCol = 2)
  print(PLOT_CCCORHours)
  insertPlot(wb, "PLOT_COR", startRow=45, startCol = 10)
  print(PLOT_CCCORCost)
  insertPlot(wb, "PLOT_COR", startRow=45, startCol = 18)
  
  addWorksheet(wb, "PLOT_MOD")
  print(PLOT_MODTrend)
  insertPlot(wb, "PLOT_MOD", startRow=5, startCol = 2)
  print(PLOT_EQMODCount)
  insertPlot(wb, "PLOT_MOD", startRow=25, startCol = 2)
  print(PLOT_EQMODHours)
  insertPlot(wb, "PLOT_MOD", startRow=25, startCol = 10)
  print(PLOT_EQMODCost)
  insertPlot(wb, "PLOT_MOD", startRow=25, startCol = 18)
  print(PLOT_CCMODCount)
  insertPlot(wb, "PLOT_MOD", startRow=45, startCol = 2)
  print(PLOT_CCMODHours)
  insertPlot(wb, "PLOT_MOD", startRow=45, startCol = 10)
  print(PLOT_CCMODCost)
  insertPlot(wb, "PLOT_MOD", startRow=45, startCol = 18)
  
  addWorksheet(wb, "PLOT_PM")
  print(PLOT_PMTrend)
  insertPlot(wb, "PLOT_PM", startRow=5, startCol = 2)
  print(PLOT_EQPMCount)
  insertPlot(wb, "PLOT_PM", startRow=25, startCol = 2)
  print(PLOT_EQPMHours)
  insertPlot(wb, "PLOT_PM", startRow=25, startCol = 10)
  print(PLOT_EQPMCost)
  insertPlot(wb, "PLOT_PM", startRow=25, startCol = 18)
  print(PLOT_CCPMCount)
  insertPlot(wb, "PLOT_PM", startRow=45, startCol = 2)
  print(PLOT_CCPMHours)
  insertPlot(wb, "PLOT_PM", startRow=45, startCol = 10)
  print(PLOT_CCPMCost)
  insertPlot(wb, "PLOT_PM", startRow=45, startCol = 18)
  
  addWorksheet(wb, "PLOT_CAL")
  print(PLOT_CALTrend)
  insertPlot(wb, "PLOT_CAL", startRow=5, startCol = 2)
  print(PLOT_EQCALCount)
  insertPlot(wb, "PLOT_CAL", startRow=25, startCol = 2)
  print(PLOT_EQCALHours)
  insertPlot(wb, "PLOT_CAL", startRow=25, startCol = 10)
  print(PLOT_EQCALCost)
  insertPlot(wb, "PLOT_CAL", startRow=25, startCol = 18)
  print(PLOT_CCCALCount)
  insertPlot(wb, "PLOT_CAL", startRow=45, startCol = 2)
  print(PLOT_CCCALHours)
  insertPlot(wb, "PLOT_CAL", startRow=45, startCol = 10)
  print(PLOT_CCCALCost)
  insertPlot(wb, "PLOT_CAL", startRow=45, startCol = 18)
  
  addWorksheet(wb, "PLOT_FAIL")
  print(PLOT_FAILTrend)
  insertPlot(wb, "PLOT_FAIL", startRow=5, startCol = 2)
  print(PLOT_EQFAILCount)
  insertPlot(wb, "PLOT_FAIL", startRow=25, startCol = 2)
  print(PLOT_EQFAILHours)
  insertPlot(wb, "PLOT_FAIL", startRow=25, startCol = 10)
  print(PLOT_EQFAILCost)
  insertPlot(wb, "PLOT_FAIL", startRow=25, startCol = 18)
  print(PLOT_CCFAILCount)
  insertPlot(wb, "PLOT_FAIL", startRow=45, startCol = 2)
  print(PLOT_CCFAILHours)
  insertPlot(wb, "PLOT_FAIL", startRow=45, startCol = 10)
  print(PLOT_CCFAILCost)
  insertPlot(wb, "PLOT_FAIL", startRow=45, startCol = 18)
  
  addWorksheet(wb, "PLOT_FAIL_DEEP")
  print(PLOT_FailMode)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=5, startCol = 2)
  print(PLOT_CauseCode)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=5, startCol = 10)
  print(PLOT_ActionCode)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=5, startCol = 18)
  print(PLOT_TOP3Equip_FAIL)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=25, startCol = 2)
  print(PLOT_TOP3ClassCat_FAIL)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=25, startCol = 10)
  print(PLOT_DTTrend)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=45, startCol = 2)
  print(PLOT_EQDowntime)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=45, startCol = 10)
  print(PLOT_CCDowntime)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=45, startCol = 18)
  print(PLOT_URGENTTrend)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=65, startCol = 2)
  print(PLOT_EQUrgentCount)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=85, startCol = 2)
  print(PLOT_EQUrgentHours)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=85, startCol = 10)
  print(PLOT_EQUrgentCost)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=85, startCol = 18)
  print(PLOT_CCUrgentCount)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=105, startCol = 2)
  print(PLOT_CCUrgentHours)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=105, startCol = 10)
  print(PLOT_CCUrgentCost)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=105, startCol = 18)
  print(PLOT_SERIOUSTrend)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=125, startCol = 2)
  print(PLOT_EQSeriousCount)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=145, startCol = 2)
  print(PLOT_EQSeriousHours)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=145, startCol = 10)
  print(PLOT_EQSeriousCost)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=145, startCol = 18)
  print(PLOT_CCSeriousCount)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=165, startCol = 2)
  print(PLOT_CCSeriousHours)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=165, startCol = 10)
  print(PLOT_CCSeriousCost)
  insertPlot(wb, "PLOT_FAIL_DEEP", startRow=165, startCol = 18)
  
  ### Save the assembled workbook
  saveWorkbook(wb, file=VAR_outputPath, overwrite = TRUE)

  ### Move the input file into the output folder
  file.copy(from = VAR_inputPath, to = paste0(VAR_outputDir, "/", VAR_inputFullFilename))
  file.remove(VAR_inputPath)
}
